[{"path":"https://jakubnowosad.com/spData/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Roger Bivand. Author. Jakub Nowosad. Author, maintainer. Robin Lovelace. Author. Angelos Mimis. Contributor. Mark Monmonier. Contributor.           author state.vbm dataset Greg Snow. Contributor.           author state.vbm dataset","code":""},{"path":"https://jakubnowosad.com/spData/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bivand R, Nowosad J, Lovelace R (2024). spData: Datasets Spatial Analysis. R package version 2.3.4, https://jakubnowosad.com/spData/.","code":"@Manual{,   title = {spData: Datasets for Spatial Analysis},   author = {Roger Bivand and Jakub Nowosad and Robin Lovelace},   year = {2024},   note = {R package version 2.3.4},   url = {https://jakubnowosad.com/spData/}, }"},{"path":"https://jakubnowosad.com/spData/index.html","id":"spdata-","dir":"","previous_headings":"","what":"Datasets for Spatial Analysis","title":"Datasets for Spatial Analysis","text":"Datasets spatial analysis (version 2.3.4, ESRI Shapefile datasets dropped, use provided GeoPackage files instead)","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"sf","dir":"","previous_headings":"","what":"sf","title":"Datasets for Spatial Analysis","text":"alaska - Alaska multipolygon aggregating_zones - See congruent congruent - Sample UK administrative zones shared borders aggregating_zones (incongruent shared borders) teaching concept spatial congruence cycle_hire - Cycle hire points London cycle_hire_osm - Cycle hire points London OSM hawaii - Hawaii multipolygon incongruent - See congruent lnd - boroughs London nz - regions New Zealand nz_height - High points New Zealand seine - Small river network France urban_agglomerations - Major urban areas worldwide us_states - US states polygons world - World country polygons","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"sp","dir":"","previous_headings":"","what":"sp","title":"Datasets for Spatial Analysis","text":"auckland - Marshall’s infant mortality Auckland dataset elect80 - 1980 Presidential election results house - Lucas county OH housing SplashDams - Data Splash Dams western Oregon state.vbm - US State Visibility Based Map","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"spdep","dir":"","previous_headings":"","what":"spdep","title":"Datasets for Spatial Analysis","text":"afcon - Spatial patterns conflict Africa 1966-78 boston - Boston Housing Data columbus - Columbus OH spatial analysis data set eire - Eire data sets nc.sids - North Carolina SIDS data NY_data - New York leukemia data used.cars - US 1960 used car prices","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"raster","dir":"","previous_headings":"","what":"raster","title":"Datasets for Spatial Analysis","text":"elev.tif - Small raster dataset representing elevation values grain.tif - Small raster dataset representing grain size classes","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"misc","dir":"","previous_headings":"","what":"misc","title":"Datasets for Spatial Analysis","text":"baltimore - House sales prices, Baltimore, MD 1978 coffee_data - World coffee production statistics country, 2016 2017 getisord - Getis-Ord remote sensing example data hopkins - Hopkins burnt savanna herb remains huddersfield - Prevalence respiratory symptoms jenks71 - Illinois 1959 county gross farm product value per acre us_states_df - Selected American Community Survey (ACS) data wheat - Mercer Hall wheat yield data worldbank_df - Selected World Bank data depmunic properties - Athens properties data set HSAR","code":""},{"path":"https://jakubnowosad.com/spData/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Datasets for Spatial Analysis","text":"Get released version CRAN: Get development version github:","code":"install.packages(\"spData\") devtools::install_github(\"nowosad/spData\")"},{"path":"https://jakubnowosad.com/spData/index.html","id":"spdatalarge","dir":"","previous_headings":"","what":"spDataLarge","title":"Datasets for Spatial Analysis","text":"package interacts data available spDataLarge package, available ‘drat’ repository. access data package, run: size spDataLarge package approximately 20 MB. Learn spDataLarge package https://github.com/Nowosad/spDataLarge.","code":"install.packages(\"spDataLarge\", repos = \"https://nowosad.github.io/drat/\", type = \"source\")"},{"path":"https://jakubnowosad.com/spData/index.html","id":"contributions","dir":"","previous_headings":"","what":"Contributions","title":"Datasets for Spatial Analysis","text":"Feel free submit issues enhancement requests.","code":""},{"path":"https://jakubnowosad.com/spData/reference/SplashDams.html","id":null,"dir":"Reference","previous_headings":"","what":"Data for Splash Dams in western Oregon — SplashDams","title":"Data for Splash Dams in western Oregon — SplashDams","text":"Data Splash Dams western Oregon","code":""},{"path":"https://jakubnowosad.com/spData/reference/SplashDams.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data for Splash Dams in western Oregon — SplashDams","text":"","code":"SplashDams"},{"path":"https://jakubnowosad.com/spData/reference/SplashDams.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Data for Splash Dams in western Oregon — SplashDams","text":"Formal class 'SpatialPointsDataFrame 232 obs.  6 variables: streamName locationCode height lastDate owner datesUsed","code":""},{"path":"https://jakubnowosad.com/spData/reference/SplashDams.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data for Splash Dams in western Oregon — SplashDams","text":"R. R. Miller (2010) Past Present? Historical Splash-dam Mapping Stream Disturbance Detection Oregon Coastal Province. MSc. thesis, Oregon State University; packaged Jonathan Callahan","code":""},{"path":"https://jakubnowosad.com/spData/reference/SplashDams.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Data for Splash Dams in western Oregon — SplashDams","text":"","code":"if (requireNamespace(\"sp\", quietly = TRUE)) {   library(sp)   data(SplashDams)   plot(SplashDams, axes=TRUE) }"},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial patterns of conflict in Africa 1966-78 — afcon","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"afcon data frame 42 rows 5 columns, 42 African countries, exclusing South West Africa Spanish Equatorial Africa Spanish Sahara. dataset used Anselin (1995), downloaded  adaptation. neighbour list object africa.rook.nb SpaceStat rook.GAL, list used Anselin (1995) - paper.nb reconstructs list used paper, inserted links Mauritania Morocco, South Africa Angola Zambia, Tanzania Zaire, Botswana Zambia. afxy coordinate matrix centroids countries.","code":""},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"","code":"afcon"},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"data frame contains following columns: x: easting decimal degrees (taken centroid shapefile polygon) y: northing decimal degrees (taken centroid shapefile polygon) totcon: index total conflict 1966-78 name: country name id: country id number paper","code":""},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"Anselin, L. John O'Loughlin. 1992. Geography international conflict cooperation: spatial dependence regional context Africa.  New Geopolitics, ed. M. Ward, pp. 39-75.  Philadelphia, PA: Gordon Breach. also: Anselin, L. 1995. Local indicators spatial association, Geographical Analysis, 27, Table 1, p. 103.","code":""},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"source data files prepared Luc Anselin, Spatial Analysis Laboratory, Department Agricultural Consumer Economics, University Illinois, Urbana-Champaign.","code":""},{"path":"https://jakubnowosad.com/spData/reference/afcon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial patterns of conflict in Africa 1966-78 — afcon","text":"","code":"data(afcon) if (requireNamespace(\"spdep\", quietly = TRUE)) {   library(spdep)   plot(africa.rook.nb, afxy)   plot(diffnb(paper.nb, africa.rook.nb), afxy, col=\"red\", add=TRUE)   text(afxy, labels=attr(africa.rook.nb, \"region.id\"), pos=4, offset=0.4)   moran.test(afcon$totcon, nb2listw(africa.rook.nb))   moran.test(afcon$totcon, nb2listw(paper.nb))   geary.test(afcon$totcon, nb2listw(paper.nb)) } #> Loading required package: sf #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE #> Warning: neighbour object has 37 sub-graphs  #>  #> \tGeary C test under randomisation #>  #> data:  afcon$totcon  #> weights: nb2listw(paper.nb)    #>  #> Geary C statistic standard deviate = 2.8988, p-value = 0.001873 #> alternative hypothesis: Expectation greater than statistic #> sample estimates: #> Geary C statistic       Expectation          Variance  #>        0.58395772        1.00000000        0.02059931  #>"},{"path":"https://jakubnowosad.com/spData/reference/alaska.html","id":null,"dir":"Reference","previous_headings":"","what":"Alaska multipolygon — alaska","title":"Alaska multipolygon — alaska","text":"object loaded sf object containing state Alaska US Census Bureau variables American Community Survey (ACS)","code":""},{"path":"https://jakubnowosad.com/spData/reference/alaska.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alaska multipolygon — alaska","text":"","code":"alaska"},{"path":"https://jakubnowosad.com/spData/reference/alaska.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Alaska multipolygon — alaska","text":"Formal class 'sf' [package \"sf\"]; data contains data.frame 1 obs. 7 variables: GEOID: character vector geographic identifiers NAME: character vector state names REGION: character vector region names AREA: area square kilometers units class total_pop_10: numerical vector total population 2010 total_pop_15: numerical vector total population 2015 geometry: sfc_MULTIPOLYGON object projected coordinates using Alaska Albers (EPSG:3467).","code":""},{"path":"https://jakubnowosad.com/spData/reference/alaska.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Alaska multipolygon — alaska","text":"https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/alaska.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alaska multipolygon — alaska","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(alaska)    plot(alaska[\"total_pop_15\"]) }"},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":null,"dir":"Reference","previous_headings":"","what":"Marshall's infant mortality in Auckland dataset — auckland","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"(Use example(auckland) load data shapefile generate neighbour list fly).  auckland data frame 167 rows (census area units — CAU) 4 columns. dataset also includes \"nb\" object auckland.nb neighbour relations based contiguity, \"polylist\" object auckpolys polygon boundaries CAU. auckland data frame includes following columns:","code":""},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"","code":"auckland"},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"data frame contains following columns: Easting: numeric vector x coordinates unknown spatial reference system Northing: numeric vector y coordinates unknown spatial reference system M77_85: numeric vector counts infant (5 years age) deaths Auckland, 1977-1985 Und5_81: numeric vector population 5 years age 1981 Census","code":""},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"Marshall R M (1991) Mapping disease mortality rates using Empirical Bayes Estimators, Applied Statistics, 40, 283–294; Bailey T, Gatrell (1995) Interactive Spatial Data Analysis, Harlow: Longman — INFOMAP data set used permission.","code":""},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"contiguous neighbours object completely replicate results sources, reconstructed auckpolys; examination figures sources suggests differences detail, although probably substance.","code":""},{"path":"https://jakubnowosad.com/spData/reference/auckland.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Marshall's infant mortality in Auckland dataset — auckland","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   auckland <- sf::st_read(system.file(\"shapes/auckland.gpkg\", package=\"spData\")[1])   plot(sf::st_geometry(auckland))   if (requireNamespace(\"spdep\", quietly = TRUE)) {     auckland.nb <- spdep::poly2nb(auckland)   } } #> Reading layer `auckland' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/auckland.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 167 features and 4 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 7.6 ymin: -4.3 xmax: 91.5 ymax: 99.3 #> Projected CRS: Undefined Cartesian SRS with unknown unit"},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":null,"dir":"Reference","previous_headings":"","what":"House sales prices, Baltimore, MD 1978 — baltimore","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"House sales price characteristics spatial hedonic regression, Baltimore, MD 1978. X,Y Maryland grid, projection type unknown.","code":""},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"","code":"baltimore"},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"data frame 211 observations following 17 variables. STATION: numeric vector PRICE: numeric vector NROOM: numeric vector DWELL: numeric vector NBATH: numeric vector PATIO: numeric vector FIREPL: numeric vector AC: numeric vector BMENT: numeric vector NSTOR: numeric vector GAR: numeric vector AGE: numeric vector CITCOU: numeric vector LOTSZ: numeric vector SQFT: numeric vector X: numeric vector Y: numeric vector","code":""},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"Prepared Luc Anselin. Original data made available Robin Dubin, Weatherhead School Management, Case Western Research University, Cleveland, OH. http://sal.agecon.uiuc.edu/datasets/baltimore.zip","code":""},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"Dubin, Robin . (1992). Spatial autocorrelation neighborhood quality. Regional Science Urban Economics 22(3), 433-452.","code":""},{"path":"https://jakubnowosad.com/spData/reference/baltimore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"House sales prices, Baltimore, MD 1978 — baltimore","text":"","code":"data(baltimore) str(baltimore) #> 'data.frame':\t211 obs. of  17 variables: #>  $ STATION: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ PRICE  : num  47 113 165 104.3 62.5 ... #>  $ NROOM  : num  4 7 7 7 7 6 6 8 6 7 ... #>  $ DWELL  : num  0 1 1 1 1 1 1 1 1 1 ... #>  $ NBATH  : num  1 2.5 2.5 2.5 1.5 2.5 2.5 1.5 1 2.5 ... #>  $ PATIO  : num  0 1 1 1 1 1 1 1 1 1 ... #>  $ FIREPL : num  0 1 1 1 1 1 1 0 1 1 ... #>  $ AC     : num  0 1 0 1 0 0 1 0 1 1 ... #>  $ BMENT  : num  2 2 3 2 2 3 3 0 3 3 ... #>  $ NSTOR  : num  3 2 2 2 2 3 1 3 2 2 ... #>  $ GAR    : num  0 2 2 2 0 1 2 0 0 2 ... #>  $ AGE    : num  148 9 23 5 19 20 20 22 22 4 ... #>  $ CITCOU : num  0 1 1 1 1 1 1 1 1 1 ... #>  $ LOTSZ  : num  5.7 279.5 70.6 174.6 107.8 ... #>  $ SQFT   : num  11.2 28.9 30.6 26.1 22 ... #>  $ X      : num  907 922 920 923 918 900 918 907 918 897 ... #>  $ Y      : num  534 574 581 578 574 577 576 576 562 576 ...  if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   baltimore_sf <- baltimore %>% st_as_sf(., coords = c(\"X\",\"Y\"))   plot(baltimore_sf[\"PRICE\"]) }"},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":null,"dir":"Reference","previous_headings":"","what":"Corrected Boston Housing Data — boston","title":"Corrected Boston Housing Data — boston","text":"boston.c data frame 506 rows 20 columns. contains Harrison Rubinfeld (1978) data corrected minor errors augmented latitude longitude observations. Gilley Pace also point MEDV censored, median values USD 50,000 set USD 50,000. original data set without corrections also included package mlbench BostonHousing. addition, matrix tract point coordinates projected UTM zone 19 included boston.utm, sphere influence neighbours list boston.soi.","code":""},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Corrected Boston Housing Data — boston","text":"data frame contains following columns: TOWN: factor levels given town names TOWNNO: numeric vector corresponding TOWN TRACT: numeric vector tract ID numbers LON: numeric vector tract point longitudes decimal degrees LAT: numeric vector tract point latitudes decimal degrees MEDV: numeric vector median values owner-occupied housing                 USD 1000 CMEDV: numeric vector corrected median values                 owner-occupied housing USD 1000 CRIM: numeric vector per capita crime ZN: numeric vector proportions residential land zoned                 lots 25000 sq. ft per town (constant Boston tracts) INDUS: numeric vector proportions non-retail business                 acres per town (constant Boston tracts) CHAS: factor levels 1 tract borders Charles River;                 0 otherwise NOX: numeric vector nitric oxides concentration (parts per                                                                     10 million) per town RM: numeric vector average numbers rooms per dwelling AGE: numeric vector proportions owner-occupied units                 built prior 1940 DIS: numeric vector weighted distances five Boston                 employment centres RAD: numeric vector index accessibility radial                 highways per town (constant Boston tracts) TAX: numeric vector full-value property-tax rate per USD                 10,000 per town (constant Boston tracts) PTRATIO: numeric vector pupil-teacher ratios per town                 (constant Boston tracts) B: numeric vector 1000*(Bk - 0.63)^2 Bk                 proportion blacks LSTAT: numeric vector percentage values lower status                 population","code":""},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Corrected Boston Housing Data — boston","text":"Previously available http://lib.stat.cmu.edu/datasets/boston_corrected.txt","code":""},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Corrected Boston Housing Data — boston","text":"Details creation tract GPKG file: tract boundaries 1990 (formerly : http://www.census.gov/geo/cob/bdy/tr/tr90shp/tr25_d90_shp.zip, counties BOSTON SMSA http://www.census.gov/population/metro/files/lists/historical/63mfips.txt); tract conversion table 1980/1970 (formerly : https://www.icpsr.umich.edu/icpsrweb/ICPSR/studies/7913?q=07913&permit[0]=AVAILABLE, http://www.icpsr.umich.edu/cgi-bin/bob/zipcart2?path=ICPSR&study=7913&bundle=&ds=1&dups=yes). shapefile contains corrections extra variables (tract 3592 corrected 3593; extra columns : units: number single family houses cu5k: count units USD 5,000 c5_7_5: counts USD 5,000 7,500 C*_*: interval counts co50k: count units USD 50,000 median: recomputed median values BB: recomputed black population proportion censored: whether censored NOXID: NOX model zone ID POP: tract population","code":""},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Corrected Boston Housing Data — boston","text":"Harrison, David, Daniel L. Rubinfeld, Hedonic Housing Prices Demand Clean Air, Journal Environmental Economics Management, Volume 5, (1978), 81-102. Original data. Gilley, O.W., R. Kelley Pace, Harrison Rubinfeld Data, Journal Environmental Economics Management, 31 (1996),403-405. Provided corrections examined censoring. Pace, R. Kelley, O.W. Gilley, Using Spatial Configuration Data Improve Estimation,  Journal Real Estate Finance Economics, 14 (1997), 333-340. Bivand, Roger. Revisiting Boston data set - Changing units observation affects estimated willingness pay clean air. REGION, v. 4, n. 1, p. 109-127, 2017. https://openjournals.wu.ac./ojs/index.php/region/article/view/107.","code":""},{"path":"https://jakubnowosad.com/spData/reference/boston.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Corrected Boston Housing Data — boston","text":"","code":"if (requireNamespace(\"spdep\", quietly = TRUE)) {   data(boston)   hr0 <- lm(log(MEDV) ~ CRIM + ZN + INDUS + CHAS + I(NOX^2) + I(RM^2) +                     AGE + log(DIS) + log(RAD) + TAX + PTRATIO + B + log(LSTAT), data = boston.c)   summary(hr0)   logLik(hr0)   gp0 <- lm(log(CMEDV) ~ CRIM + ZN + INDUS + CHAS + I(NOX^2) + I(RM^2) +                     AGE + log(DIS) + log(RAD) + TAX + PTRATIO + B + log(LSTAT), data = boston.c)   summary(gp0)   logLik(gp0)   spdep::lm.morantest(hr0, spdep::nb2listw(boston.soi)) } #>  #> \tGlobal Moran I for regression residuals #>  #> data:   #> model: lm(formula = log(MEDV) ~ CRIM + ZN + INDUS + CHAS + I(NOX^2) + #> I(RM^2) + AGE + log(DIS) + log(RAD) + TAX + PTRATIO + B + log(LSTAT), #> data = boston.c) #> weights: spdep::nb2listw(boston.soi) #>  #> Moran I statistic standard deviate = 14.509, p-value < 2.2e-16 #> alternative hypothesis: greater #> sample estimates: #> Observed Moran I      Expectation         Variance  #>     0.4364296993    -0.0168870829     0.0009762383  #>  if (requireNamespace(\"sf\", quietly = TRUE)) { boston.tr <- sf::st_read(system.file(\"shapes/boston_tracts.gpkg\",                            package=\"spData\")[1])   if (requireNamespace(\"spdep\", quietly = TRUE)) {     boston_nb <- spdep::poly2nb(boston.tr)   } } #> Reading layer `boston_tracts' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/boston_tracts.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 506 features and 36 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: -71.52311 ymin: 42.00305 xmax: -70.63823 ymax: 42.67307 #> Geodetic CRS:  NAD27"},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":null,"dir":"Reference","previous_headings":"","what":"World coffee production data — coffee_data","title":"World coffee production data — coffee_data","text":"tiny dataset containing estimates global coffee thousands 60 kg bags produced country. Purpose: teaching **** research.","code":""},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World coffee production data — coffee_data","text":"","code":"coffee_data"},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World coffee production data — coffee_data","text":"data frame (tibble) 58 following 12 variables: name_long: name country coffee variety coffee_production_2016: production 2016 coffee_production_2017: production 2017","code":""},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World coffee production data — coffee_data","text":"International Coffee Organization (ICO). See http://www.ico.org/ http://www.ico.org/prices/m1-exports.pdf","code":""},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"World coffee production data — coffee_data","text":"examples section shows can joined spatial data create simple map.","code":""},{"path":"https://jakubnowosad.com/spData/reference/coffee_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World coffee production data — coffee_data","text":"","code":"head(coffee_data) #> # A tibble: 6 × 3 #>   name_long                coffee_production_2016 coffee_production_2017 #>   <chr>                                     <int>                  <int> #> 1 Angola                                       NA                     NA #> 2 Bolivia                                       3                      4 #> 3 Brazil                                     3277                   2786 #> 4 Burundi                                      37                     38 #> 5 Cameroon                                      8                      6 #> 6 Central African Republic                     NA                     NA if (FALSE) { # \\dontrun{ if (requireNamespace(\"dplyr\")) { library(dplyr) library(sf) # found by searching for \"global coffee data\" u = \"http://www.ico.org/prices/m1-exports.pdf\" download.file(u, \"data.pdf\", mode = \"wb\") if (requireNamespace(\"pdftables\")) { # requires api key pdftables::convert_pdf(input_file = \"data.pdf\", output_file = \"coffee-data-messy.csv\") d = read_csv(\"coffee-data-messy.csv\") file.remove(\"coffee-data-messy.csv\") file.remove(\"data.pdf\") coffee_data = slice(d, -c(1:9)) %>%          select(name_long = 1, coffee_production_2016 = 2, coffee_production_2017 = 3) %>%          filter(!is.na(coffee_production_2016)) %>%          mutate_at(2:3, str_replace, \" \", \"\") %>%          mutate_at(2:3, as.integer) world_coffee = left_join(world, coffee_data) plot(world_coffee[c(\"coffee_production_2016\", \"coffee_production_2017\")]) b = c(0, 500, 1000, 2000, 3000) library(tmap) tm_shape(world_coffee) +   tm_fill(\"coffee_production_2017\", title = \"Thousand 60kg bags\", breaks = b,           textNA = \"No data\", colorNA = NULL) tmap_mode(\"view\") # for an interactive version }} } # }"},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":null,"dir":"Reference","previous_headings":"","what":"Columbus OH spatial analysis data set — columbus","title":"Columbus OH spatial analysis data set — columbus","text":"columbus data frame 49 rows 22 columns. Unit analysis: 49 neighbourhoods Columbus, OH, 1980 data. addition data set includes polylist object polys boundaries neighbourhoods, matrix polygon centroids coords, col.gal.nb, neighbours list original GAL-format file. matrix bbs DEPRECATED, retained packages using data set.","code":""},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Columbus OH spatial analysis data set — columbus","text":"","code":"columbus"},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Columbus OH spatial analysis data set — columbus","text":"data frame contains following columns: AREA: computed ArcView PERIMETER: computed ArcView COLUMBUS_: internal polygon ID (ignore) COLUMBUS_I: another internal polygon ID (ignore) POLYID: yet another polygon ID NEIG: neighborhood id value (1-49);                        conforms id value used Spatial Econometrics book. HOVAL: housing value (1,000 USD) INC: household income (1,000 USD) CRIME: residential burglaries vehicle thefts per thousand                        households neighborhood OPEN: open space neighborhood PLUMB: percentage housing units without plumbing DISCBD: distance CBD X: x coordinate (arbitrary digitizing units, polygon coordinates) Y: y coordinate (arbitrary digitizing units, polygon coordinates) NSA: north-south dummy (North=1) NSB: north-south dummy (North=1) EW: east-west dummy (East=1) CP: core-periphery dummy (Core=1) THOUS: constant=1,000 NEIGNO: NEIG+1,000, alternative neighborhood id value","code":""},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Columbus OH spatial analysis data set — columbus","text":"Anselin, Luc.  1988.  Spatial econometrics: methods models.  Dordrecht: Kluwer Academic, Table 12.1 p. 189.","code":""},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Columbus OH spatial analysis data set — columbus","text":"row names columbus region.id attribute polys set columbus$NEIGNO.","code":""},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Columbus OH spatial analysis data set — columbus","text":"source data files prepared Luc Anselin, Spatial Analysis Laboratory, Department Agricultural Consumer Economics, University Illinois, Urbana-Champaign, http://sal.agecon.uiuc.edu/datasets/columbus.zip.","code":""},{"path":"https://jakubnowosad.com/spData/reference/columbus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Columbus OH spatial analysis data set — columbus","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   columbus <- sf::st_read(system.file(\"shapes/columbus.gpkg\", package=\"spData\")[1])   plot(sf::st_geometry(columbus)) } #> Reading layer `columbus' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/columbus.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 49 features and 20 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 5.874907 ymin: 10.78863 xmax: 11.28742 ymax: 14.74245 #> Projected CRS: Undefined Cartesian SRS with unknown unit   if (requireNamespace(\"spdep\", quietly = TRUE)) {   library(spdep)   col.gal.nb <- read.gal(system.file(\"weights/columbus.gal\", package=\"spData\")[1]) }"},{"path":"https://jakubnowosad.com/spData/reference/congruent.html","id":null,"dir":"Reference","previous_headings":"","what":"Datasets to illustrate the concept of spatial congruence — congruent","title":"Datasets to illustrate the concept of spatial congruence — congruent","text":"Sample old (incongruent) new (congruent) administrative zones UK statistical agencies","code":""},{"path":"https://jakubnowosad.com/spData/reference/congruent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datasets to illustrate the concept of spatial congruence — congruent","text":"","code":"congruent"},{"path":"https://jakubnowosad.com/spData/reference/congruent.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datasets to illustrate the concept of spatial congruence — congruent","text":"Simple feature geographic data projected CRS (OSGB) random values assigned teaching purposes.","code":""},{"path":"https://jakubnowosad.com/spData/reference/congruent.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Datasets to illustrate the concept of spatial congruence — congruent","text":"https://en.wikipedia.org/wiki/ONS_coding_system","code":""},{"path":"https://jakubnowosad.com/spData/reference/congruent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Datasets to illustrate the concept of spatial congruence — congruent","text":"","code":"if(requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   plot(aggregating_zones$geometry, lwd = 5)   plot(congruent$geometry, add = TRUE, border = \"green\", lwd = 2)   plot(incongruent$geometry, add = TRUE, border = \"blue\", col = NA)   rbind(congruent, incongruent) }  #> Simple feature collection with 18 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 417686.2 ymin: 443703 xmax: 422963 ymax: 447036.8 #> Projected CRS: OSGB 1936 / British National Grid #> First 10 features: #>          level    value                       geometry #> 1    Congruent 5.060934 MULTIPOLYGON (((420725.6 44... #> 2    Congruent 4.887273 MULTIPOLYGON (((419315.7 44... #> 3    Congruent 4.968365 MULTIPOLYGON (((421560 4454... #> 4    Congruent 5.493269 MULTIPOLYGON (((419023.8 44... #> 5    Congruent 4.956924 MULTIPOLYGON (((419901 4467... #> 6    Congruent 4.790662 MULTIPOLYGON (((420253 4461... #> 7    Congruent 5.233551 MULTIPOLYGON (((419788.2 44... #> 8    Congruent 4.990704 MULTIPOLYGON (((420409.5 44... #> 9    Congruent 5.136356 MULTIPOLYGON (((418708.8 44... #> 10 Incongruent 4.037919 MULTIPOLYGON (((420799.6 44... # Code used to download the data: if (FALSE) { # \\dontrun{ #devtools::install_github(\"robinlovelace/ukboundaries\") library(sf) library(tmap) library(dplyr) #library(ukboundaries) sel = grepl(\"003|004\", msoa2011_lds$geo_label) aggregating_zones = st_transform(msoa2011_lds[sel, ], 27700) # find lsoas in the aggregating_zones lsoa_touching = st_transform(lsoa2011_lds, 27700)[aggregating_zones, ] lsoa_cents = st_centroid(lsoa_touching) lsoa_cents = lsoa_cents[aggregating_zones, ] sel = lsoa_touching$geo_code %in% lsoa_cents$geo_code # same for ed zones ed_touching = st_transform(ed1981, 27700)[aggregating_zones, ] ed_cents = st_centroid(ed_touching) ed_cents = ed_cents[aggregating_zones, ] incongruent_agg_ed = ed_touching[ed_cents, ] set.seed(2017) incongruent_agg_ed$value = rnorm(nrow(incongruent_agg_ed), mean = 5) congruent = aggregate(incongruent_agg_ed[\"value\"], lsoa_touching[sel, ], mean) congruent$level = \"Congruent\" congruent = congruent[c(\"level\", \"value\")] incongruent_cents = st_centroid(incongruent_agg_ed) aggregating_value = st_join(incongruent_cents, congruent)$value.y incongruent_agg = aggregate(incongruent_agg_ed[\"value\"], list(aggregating_value), FUN = mean) incongruent_agg$level = \"Incongruent\" incongruent = incongruent_agg[c(\"level\", \"value\")] summary(st_geometry_type(congruent)) summary(st_geometry_type(incongruent)) incongruent = st_cast(incongruent, \"MULTIPOLYGON\") summary(st_geometry_type(incongruent)) summary(st_geometry_type(aggregating_zones)) devtools::use_data(congruent, overwrite = TRUE) devtools::use_data(incongruent, overwrite = TRUE) devtools::use_data(aggregating_zones, overwrite = TRUE) } # }"},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire.html","id":null,"dir":"Reference","previous_headings":"","what":"Cycle hire points in London — cycle_hire","title":"Cycle hire points in London — cycle_hire","text":"Points representing cycle hire points accross London.","code":""},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cycle hire points in London — cycle_hire","text":"","code":"cycle_hire"},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cycle hire points in London — cycle_hire","text":"FORMAT: id: Id hire point name: Name point area: Area nbikes: number bikes currently parked nempty: number empty places geometry: sfc_POINT","code":""},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cycle hire points in London — cycle_hire","text":"https://www.data.gov.uk/","code":""},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cycle hire points in London — cycle_hire","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(cycle_hire)   # or   cycle_hire <- st_read(system.file(\"shapes/cycle_hire.geojson\", package=\"spData\"))      plot(cycle_hire) } #> Reading layer `cycle_hire' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/cycle_hire.geojson'  #>   using driver `GeoJSON' #> Simple feature collection with 742 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.2367699 ymin: 51.45475 xmax: -0.002275 ymax: 51.54214 #> Geodetic CRS:  WGS 84   if (FALSE) { # \\dontrun{ # Download the data cycle_hire = readr::read_csv(\"http://cyclehireapp.com/cyclehirelive/cyclehire.csv\",    col_names = FALSE, skip = TRUE) cycle_hire = cycle_hire[c_names] c_names = c(\"id\", \"name\", \"area\", \"lat\", \"lon\", \"nbikes\", \"nempty\") cycle_hire = st_sf(cycle_hire, st_multipoint(c_names[c(\"lon\", \"lat\")])) } # }"},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire_osm.html","id":null,"dir":"Reference","previous_headings":"","what":"Cycle hire points in London from OSM — cycle_hire_osm","title":"Cycle hire points in London from OSM — cycle_hire_osm","text":"Dataset downloaded using osmdata package representing cycle hire points accross London.","code":""},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire_osm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cycle hire points in London from OSM — cycle_hire_osm","text":"","code":"cycle_hire_osm"},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire_osm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cycle hire points in London from OSM — cycle_hire_osm","text":"osm_id: OSM ID name: name cycle point capacity: many bikes can take cyclestreets_id: ID linked cyclestreets' photomap description: Additional description points geometry: sfc_POINT","code":""},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire_osm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cycle hire points in London from OSM — cycle_hire_osm","text":"https://www.openstreetmap.org","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/cycle_hire_osm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cycle hire points in London from OSM — cycle_hire_osm","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(cycle_hire_osm)   # or   cycle_hire_osm <- st_read(system.file(\"shapes/cycle_hire_osm.geojson\", package=\"spData\"))      plot(cycle_hire_osm) } #> Reading layer `cycle_hire_osm' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/cycle_hire_osm.geojson'  #>   using driver `GeoJSON' #> Simple feature collection with 532 features and 5 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -0.229123 ymin: 51.45927 xmax: -0.0079843 ymax: 51.54683 #> Geodetic CRS:  WGS 84   # Code used to download the data: if (FALSE) { # \\dontrun{ library(osmdata) library(dplyr) library(sf) q = add_osm_feature(opq = opq(\"London\"), key = \"network\", value = \"tfl_cycle_hire\") lnd_cycle_hire = osmdata_sf(q) cycle_hire_osm = lnd_cycle_hire$osm_points nrow(cycle_hire_osm) plot(cycle_hire_osm) cycle_hire_osm = dplyr::select(cycle_hire_osm, osm_id, name, capacity,                                 cyclestreets_id, description) %>%   mutate(capacity = as.numeric(capacity)) names(cycle_hire_osm) nrow(cycle_hire_osm) } # }"},{"path":"https://jakubnowosad.com/spData/reference/depmunic.html","id":null,"dir":"Reference","previous_headings":"","what":"Municipality departments of Athens (Sf) — depmunic","title":"Municipality departments of Athens (Sf) — depmunic","text":"geographic boundaries departments (sf) municipality Athens. accompanied various characteristics areas.","code":""},{"path":"https://jakubnowosad.com/spData/reference/depmunic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Municipality departments of Athens (Sf) — depmunic","text":"","code":"depmunic"},{"path":"https://jakubnowosad.com/spData/reference/depmunic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Municipality departments of Athens (Sf) — depmunic","text":"sf object 7 polygons following 7 variables. num_dep: unique identifier municipality department. airbnb: number airbnb properties 2017 museums: number museums population: population recorded census 2011. pop_rest: number citizens origin non european country. greensp: area green spaces (unit: square meters). area: area polygon (unit: square kilometers).","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/depmunic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Municipality departments of Athens (Sf) — depmunic","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(depmunic)      depmunic$foreigners <- 100*depmunic$pop_rest/depmunic$population   plot(depmunic[\"foreigners\"], key.pos=1) }"},{"path":"https://jakubnowosad.com/spData/reference/eire.html","id":null,"dir":"Reference","previous_headings":"","what":"Eire data sets — eire","title":"Eire data sets — eire","text":"Eire data set converted shapefile format placed etc/shapes directory. initial data objects now stored SpatialPolygonsDataFrame object, contiguity neighbour list recreated. purposes record, original data set retained. eire.df data frame 26 rows 9 columns. addition, polygons 26 counties provided multipart polylist eire.polys.utm (coordinates km, projection UTM zone 30). centroids eire.coords.utm. original Cliff Ord binary contiguities eire.nb.","code":""},{"path":"https://jakubnowosad.com/spData/reference/eire.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Eire data sets — eire","text":"data frame contains following columns: : Percentage sample blood group towns: Towns/unit area pale: Beyond Pale 0, within Pale 1 size: number blood type samples ROADACC: arterial road network accessibility 1961 OWNCONS: percentage value terms gross agricultural output county consumed POPCHG: 1961 population percentage 1926 RETSALE: value retail sales British Pound000 INCOME: total personal income British Pound000 names: County names","code":""},{"path":"https://jakubnowosad.com/spData/reference/eire.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Eire data sets — eire","text":"Upton Fingleton 1985, - Bailey Gatrell 1995, ch. 1 blood group data, Cliff Ord (1973), p. 107 remaining variables (also O'Sullivan, 1968). Polygon borders Irish data sourced Michael Tiefelsdorf's SPSS Saddlepoint bundle, originally hosted : http://geog-www.sbs.ohio-state.edu/faculty/tiefelsdorf/GeoStat.htm.","code":""},{"path":"https://jakubnowosad.com/spData/reference/eire.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Eire data sets — eire","text":"","code":"# \\donttest{ library(spdep) eire <- sf::st_read(system.file(\"shapes/eire.gpkg\", package=\"spData\")[1]) #> Reading layer `eire' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/eire.gpkg' using driver `GPKG' #> Simple feature collection with 26 features and 10 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -4.12 ymin: 5768 xmax: 300.82 ymax: 6119.25 #> Projected CRS: Undefined Cartesian SRS with unknown unit eire.nb <- poly2nb(eire)  # Eire physical anthropology blood group data summary(eire$A) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   23.92   27.92   29.26   29.53   30.94   35.86  brks <- round(fivenum(eire$A), digits=2) cols <- rev(heat.colors(4)) plot(eire, col=cols[findInterval(eire$A, brks, all.inside=TRUE)]) #> Warning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot all title(main=\"Percentage with blood group A in Eire\") legend(x=c(-50, 70), y=c(6120, 6050),    c(\"under 27.91\", \"27.91 - 29.26\", \"29.26 - 31.02\", \"over 31.02\"),   fill=cols, bty=\"n\")   plot(st_geometry(eire)) plot(eire.nb, st_geometry(eire), add=TRUE)   lA <- lag.listw(nb2listw(eire.nb), eire$A) summary(lA) #>    Min. 1st Qu.  Median    Mean 3rd Qu.    Max.  #>   26.08   28.33   29.21   29.64   31.12   33.38  moran.test(eire$A, nb2listw(eire.nb)) #>  #> \tMoran I test under randomisation #>  #> data:  eire$A   #> weights: nb2listw(eire.nb)     #>  #> Moran I statistic standard deviate = 4.6851, p-value = 1.399e-06 #> alternative hypothesis: greater #> sample estimates: #> Moran I statistic       Expectation          Variance  #>        0.55412382       -0.04000000        0.01608138  #>  geary.test(eire$A, nb2listw(eire.nb)) #>  #> \tGeary C test under randomisation #>  #> data:  eire$A  #> weights: nb2listw(eire.nb)    #>  #> Geary C statistic standard deviate = 4.5146, p-value = 3.172e-06 #> alternative hypothesis: Expectation greater than statistic #> sample estimates: #> Geary C statistic       Expectation          Variance  #>        0.38011971        1.00000000        0.01885309  #>  cor(lA, eire$A) #> [1] 0.8144345 moran.plot(eire$A, nb2listw(eire.nb), labels=eire$names)  A.lm <- lm(A ~ towns + pale, data=eire) summary(A.lm) #>  #> Call: #> lm(formula = A ~ towns + pale, data = eire) #>  #> Residuals: #>     Min      1Q  Median      3Q     Max  #> -3.6420 -1.0340 -0.3428  1.0263  4.0460  #>  #> Coefficients: #>             Estimate Std. Error t value Pr(>|t|)     #> (Intercept)  27.5728     0.5448  50.614  < 2e-16 *** #> towns        -0.3595     2.9672  -0.121 0.904610     #> pale          4.3419     1.0851   4.001 0.000561 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> Residual standard error: 2.018 on 23 degrees of freedom #> Multiple R-squared:  0.5551,\tAdjusted R-squared:  0.5164  #> F-statistic: 14.35 on 2 and 23 DF,  p-value: 9.014e-05 #>  res <- residuals(A.lm) brks <- c(min(res),-2,-1,0,1,2,max(res)) cols <- rev(cm.colors(6))  plot(eire, col=cols[findInterval(res, brks, all.inside=TRUE)]) #> Warning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot all title(main=\"Regression residuals\") legend(x=c(-50, 70), y=c(6120, 6050),   legend=c(\"under -2\", \"-2 - -1\", \"-1 - 0\", \"0 - 1\", \"1 - 2\", \"over 2\"),   fill=cols, bty=\"n\")   lm.morantest(A.lm, nb2listw(eire.nb)) #>  #> \tGlobal Moran I for regression residuals #>  #> data:   #> model: lm(formula = A ~ towns + pale, data = eire) #> weights: nb2listw(eire.nb) #>  #> Moran I statistic standard deviate = 1.8003, p-value = 0.03591 #> alternative hypothesis: greater #> sample estimates: #> Observed Moran I      Expectation         Variance  #>       0.15085317      -0.06845969       0.01484007  #>  lm.morantest.sad(A.lm, nb2listw(eire.nb)) #>  #> \tSaddlepoint approximation for global Moran's I (Barndorff-Nielsen #> \tformula) #>  #> data:   #> model:lm(formula = A ~ towns + pale, data = eire) #> weights: nb2listw(eire.nb) #>  #> Saddlepoint approximation = 1.7284, p-value = 0.04196 #> alternative hypothesis: greater #> sample estimates: #> Observed Moran I  #>        0.1508532  #>  lm.LMtests(A.lm, nb2listw(eire.nb), test=\"LMerr\") #> Please update scripts to use lm.RStests in place of lm.LMtests #>  #> \tRao's score (a.k.a Lagrange multiplier) diagnostics for spatial #> \tdependence #>  #> data:   #> model: lm(formula = A ~ towns + pale, data = eire) #> test weights: listw #>  #> RSerr = 1.1634, df = 1, p-value = 0.2808 #>   # Eire agricultural data brks <- round(fivenum(eire$OWNCONS), digits=2) cols <- grey(4:1/5) plot(eire, col=cols[findInterval(eire$OWNCONS, brks, all.inside=TRUE)]) #> Warning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot all title(main=\"Percentage own consumption of agricultural produce\") legend(x=c(-50, 70), y=c(6120, 6050),   legend=c(\"under 9\", \"9 - 12.2\", \"12.2 - 19\", \"over 19\"), fill=cols, bty=\"n\")   moran.plot(eire$OWNCONS, nb2listw(eire.nb))  moran.test(eire$OWNCONS, nb2listw(eire.nb)) #>  #> \tMoran I test under randomisation #>  #> data:  eire$OWNCONS   #> weights: nb2listw(eire.nb)     #>  #> Moran I statistic standard deviate = 5.8637, p-value = 2.263e-09 #> alternative hypothesis: greater #> sample estimates: #> Moran I statistic       Expectation          Variance  #>        0.71281837       -0.04000000        0.01648309  #>  e.lm <- lm(OWNCONS ~ ROADACC, data=eire) res <- residuals(e.lm) brks <- c(min(res),-2,-1,0,1,2,max(res)) cols <- rev(cm.colors(6)) plot(eire, col=cols[findInterval(res, brks, all.inside=TRUE)]) #> Warning: plotting the first 9 out of 10 attributes; use max.plot = 10 to plot all title(main=\"Regression residuals\") legend(x=c(-50, 70), y=c(6120, 6050),   legend=c(\"under -2\", \"-2 - -1\", \"-1 - 0\", \"0 - 1\", \"1 - 2\", \"over 2\"),   fill=cm.colors(6), bty=\"n\")   lm.morantest(e.lm, nb2listw(eire.nb)) #>  #> \tGlobal Moran I for regression residuals #>  #> data:   #> model: lm(formula = OWNCONS ~ ROADACC, data = eire) #> weights: nb2listw(eire.nb) #>  #> Moran I statistic standard deviate = 3.2575, p-value = 0.0005619 #> alternative hypothesis: greater #> sample estimates: #> Observed Moran I      Expectation         Variance  #>       0.33660565      -0.05877741       0.01473183  #>  lm.morantest.sad(e.lm, nb2listw(eire.nb)) #>  #> \tSaddlepoint approximation for global Moran's I (Barndorff-Nielsen #> \tformula) #>  #> data:   #> model:lm(formula = OWNCONS ~ ROADACC, data = eire) #> weights: nb2listw(eire.nb) #>  #> Saddlepoint approximation = 2.9395, p-value = 0.001644 #> alternative hypothesis: greater #> sample estimates: #> Observed Moran I  #>        0.3366057  #>  lm.LMtests(e.lm, nb2listw(eire.nb), test=\"LMerr\") #> Please update scripts to use lm.RStests in place of lm.LMtests #>  #> \tRao's score (a.k.a Lagrange multiplier) diagnostics for spatial #> \tdependence #>  #> data:   #> model: lm(formula = OWNCONS ~ ROADACC, data = eire) #> test weights: listw #>  #> RSerr = 5.7925, df = 1, p-value = 0.01609 #>  print(localmoran.sad(e.lm, eire.nb, select=seq(along=eire.nb))) #>       Local Morans I Saddlepoint    Pr. (Sad) #> 1 1       0.21699668  0.95074844 3.417321e-01 #> 2 2      -0.37257361 -1.00603119 3.144006e-01 #> 3 3       0.23197510  0.67166518 5.017969e-01 #> 4 4       0.78193548  1.74761575 8.053059e-02 #> 5 5      -1.69064059 -1.72031078 8.537596e-02 #> 6 6      -0.16069692 -0.35212627 7.247436e-01 #> 7 7       1.31371473  2.66849536 7.619183e-03 #> 8 8       0.36534866  0.78073279 4.349597e-01 #> 9 9      -0.02557544  0.04167665 9.667565e-01 #> 10 10     0.57684331  1.70897697 8.745521e-02 #> 11 11    -0.05951798 -0.12155465 9.032517e-01 #> 12 12     0.38484587  1.47227033 1.409479e-01 #> 13 13     0.11817987  0.45727712 6.474719e-01 #> 14 14     1.41643200  2.51113769 1.203427e-02 #> 15 15     0.56242920  1.07441571 2.826364e-01 #> 16 16     0.87572704  2.05251226 4.011990e-02 #> 17 17     0.00367856  0.12813539 8.980418e-01 #> 18 18     0.55098311  1.23999193 2.149784e-01 #> 19 19     0.15155556  0.80786519 4.191682e-01 #> 20 20     2.04368839  4.53187292 5.846302e-06 #> 21 21    -0.47579871 -0.94578114 3.442602e-01 #> 22 22    -0.03454106 -0.06919691 9.448329e-01 #> 23 23     0.85723423  1.91385108 5.563919e-02 #> 24 24     0.45138572  1.36017204 1.737755e-01 #> 25 25     0.64371834  1.63188492 1.027037e-01 #> 26 26     0.02441950  0.21197000 8.321304e-01 # }"},{"path":"https://jakubnowosad.com/spData/reference/elect80.html","id":null,"dir":"Reference","previous_headings":"","what":"1980 Presidential election results — elect80","title":"1980 Presidential election results — elect80","text":"data set 1980 Presidential election results covering 3,107 US counties using geographical coordinates. addition, three spatial neighbour objects, k4 using Great Circle distances, dll using Great Circle distances, e80_queen Queen contiguities equivalent County polygons taken file co1980p020.tar.gz USGS National Atlas site, spatial weights object imported elect.ford - 4-nearest neighbour non-GC row-standardised object, coercion symmetry.","code":""},{"path":"https://jakubnowosad.com/spData/reference/elect80.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"1980 Presidential election results — elect80","text":"","code":"elect80"},{"path":"https://jakubnowosad.com/spData/reference/elect80.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"1980 Presidential election results — elect80","text":"SpatialPointsDataFrame 3107 observations following 7 variables. FIPS: factor county FIPS codes long: numeric vector longitude values lat: numeric vector latitude values pc_turnout: Votes cast proportion population age 19 eligible vote pc_college: Population college degrees proportion population age 19 eligible vote pc_homeownership: Homeownership proportion population age 19 eligible vote pc_income: Income per capita population age 19 eligible vote","code":""},{"path":"https://jakubnowosad.com/spData/reference/elect80.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"1980 Presidential election results — elect80","text":"Pace, R. Kelley Ronald Barry. 1997. \"Quick Computation Spatial Autoregressive Estimators\", Geographical Analysis; sourced data folder Spatial Econometrics Toolbox Matlab, formerly available http://www.spatial-econometrics.com/html/jplv7.zip, files elect.dat elect.ford (final line dropped).","code":""},{"path":"https://jakubnowosad.com/spData/reference/elect80.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"1980 Presidential election results — elect80","text":"","code":"if (requireNamespace(\"sp\", quietly = TRUE)) {   library(sp)   data(elect80)   summary(elect80)   plot(elect80) }"},{"path":"https://jakubnowosad.com/spData/reference/elev.tif.html","id":null,"dir":"Reference","previous_headings":"","what":"Artificial elevation raster data set — elev.tif","title":"Artificial elevation raster data set — elev.tif","text":"raster data represents elevation meters uses WGS84   coordinate reference system.","code":""},{"path":"https://jakubnowosad.com/spData/reference/elev.tif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Artificial elevation raster data set — elev.tif","text":"","code":"system.file(\"raster/elev.tif\", package = \"spData\") #> [1] \"/home/runner/work/_temp/Library/spData/raster/elev.tif\""},{"path":"https://jakubnowosad.com/spData/reference/getisord.html","id":null,"dir":"Reference","previous_headings":"","what":"Getis-Ord remote sensing example data — getisord","title":"Getis-Ord remote sensing example data — getisord","text":"go_xyz data frame 256 rows 3 columns. Vectors go_x go_y length 16 give centres grid rows columns, 30m apart. data start bottom left, Getis Ord start top left - 136th grid cell 120th.","code":""},{"path":"https://jakubnowosad.com/spData/reference/getisord.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Getis-Ord remote sensing example data — getisord","text":"data frame contains following columns: x: grid eastings y: grid northings val: remote sensing values","code":""},{"path":"https://jakubnowosad.com/spData/reference/getisord.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Getis-Ord remote sensing example data — getisord","text":"Getis, . Ord, J. K. 1996 Local spatial statistics: overview. P. Longley M. Batty (eds) Spatial analysis: modelling GIS environment (Cambridge: Geoinformation International), 266.","code":""},{"path":"https://jakubnowosad.com/spData/reference/getisord.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Getis-Ord remote sensing example data — getisord","text":"","code":"data(getisord) image(go_x, go_y, t(matrix(go_xyz$val, nrow = 16, ncol=16, byrow = TRUE)), asp = 1) text(go_xyz$x, go_xyz$y, go_xyz$val, cex = 0.7) polygon(c(195, 225, 225, 195), c(195, 195, 225, 225), lwd = 2) title(main = \"Getis-Ord 1996 remote sensing data\")"},{"path":"https://jakubnowosad.com/spData/reference/grain.tif.html","id":null,"dir":"Reference","previous_headings":"","what":"Artificial raster dataset representing grain sizes — grain.tif","title":"Artificial raster dataset representing grain sizes — grain.tif","text":"ratified raster dataset represents grain sizes   three classes clay, silt sand, WGS84 coordinate reference   system.","code":""},{"path":"https://jakubnowosad.com/spData/reference/grain.tif.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Artificial raster dataset representing grain sizes — grain.tif","text":"","code":"system.file(\"raster/grain.tif\", package = \"spData\") #> [1] \"/home/runner/work/_temp/Library/spData/raster/grain.tif\""},{"path":"https://jakubnowosad.com/spData/reference/hawaii.html","id":null,"dir":"Reference","previous_headings":"","what":"Hawaii multipolygon — hawaii","title":"Hawaii multipolygon — hawaii","text":"object loaded sf object containing state Hawaii US Census Bureau variables American Community Survey (ACS)","code":""},{"path":"https://jakubnowosad.com/spData/reference/hawaii.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hawaii multipolygon — hawaii","text":"","code":"hawaii"},{"path":"https://jakubnowosad.com/spData/reference/hawaii.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hawaii multipolygon — hawaii","text":"Formal class 'sf' [package \"sf\"]; data contains data.frame 1 obs. 7 variables: GEOID: character vector geographic identifiers NAME: character vector state names REGION: character vector region names AREA: area square kilometers units class total_pop_10: numerical vector total population 2010 total_pop_15: numerical vector total population 2015 geometry: sfc_MULTIPOLYGON object projected coordinates using Hawaii Albers Equal Area Conic (ESRI:102007).","code":""},{"path":"https://jakubnowosad.com/spData/reference/hawaii.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hawaii multipolygon — hawaii","text":"https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/hawaii.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hawaii multipolygon — hawaii","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(hawaii)    plot(hawaii[\"total_pop_15\"]) }"},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":null,"dir":"Reference","previous_headings":"","what":"Hopkins burnt savanna herb remains — hopkins","title":"Hopkins burnt savanna herb remains — hopkins","text":"20m square divided 40 40 0.5m quadrats. Observations tens grams herb remains, 0 0g less 10g, . Analysis mostly conducted using interior 32 32 grid.","code":""},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hopkins burnt savanna herb remains — hopkins","text":"","code":"hopkins"},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Hopkins burnt savanna herb remains — hopkins","text":"num [1:40, 1:40] 0 0 0 0 0 0 0 0 0 1 ...","code":""},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Hopkins burnt savanna herb remains — hopkins","text":"Upton, G., Fingleton, B. 1985 Spatial data analysis example: point pattern quatitative data, Wiley, pp. 38–39.","code":""},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Hopkins burnt savanna herb remains — hopkins","text":"Hopkins, B., 1965 Observations savanna burning Olokemeji Forest Reserve, Nigeria. Journal Applied Ecology, 2, 367–381.","code":""},{"path":"https://jakubnowosad.com/spData/reference/hopkins.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hopkins burnt savanna herb remains — hopkins","text":"","code":"data(hopkins) image(1:32, 1:32, hopkins[5:36,36:5], breaks=c(-0.5, 3.5, 20),       col=c(\"white\", \"black\"))"},{"path":"https://jakubnowosad.com/spData/reference/house.html","id":null,"dir":"Reference","previous_headings":"","what":"Lucas county OH housing — house","title":"Lucas county OH housing — house","text":"Data 25,357 single family homes sold Lucas County, Ohio, 1993-1998 county auditor, together nb neighbour object constructed sphere influence graph projected coordinates.","code":""},{"path":"https://jakubnowosad.com/spData/reference/house.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lucas county OH housing — house","text":"","code":"house"},{"path":"https://jakubnowosad.com/spData/reference/house.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Lucas county OH housing — house","text":"Formal class 'SpatialPointsDataFrame' [package \"sp\"] 5 slots. data slot data frame 25357 observations following 24 variables. price: numeric vector yrbuilt: numeric vector stories: factor levels one bilevel multilvl one+half two     two+half three TLA: numeric vector wall: factor levels stucdrvt ccbtile metlvnyl brick stone wood partbrk beds: numeric vector baths: numeric vector halfbaths: numeric vector frontage: numeric vector depth: numeric vector garage: factor levels garage basement attached detached carport garagesqft: numeric vector rooms: numeric vector lotsize: numeric vector sdate: numeric vector avalue: numeric vector s1993: numeric vector s1994: numeric vector s1995: numeric vector s1996: numeric vector s1997: numeric vector s1998: numeric vector syear: factor levels 1993 1994 1995 1996 1997 1998 age: numeric vector projection CRS(+init=epsg:2834), Ohio North State Plane.","code":""},{"path":"https://jakubnowosad.com/spData/reference/house.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Lucas county OH housing — house","text":"Dataset included Spatial Econometrics toolbox Matlab, formerly available http://www.spatial-econometrics.com/html/jplv7.zip.","code":""},{"path":"https://jakubnowosad.com/spData/reference/house.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lucas county OH housing — house","text":"","code":"if (requireNamespace(\"sp\", quietly = TRUE)) {   library(sp)   data(house)   str(house)   plot(house) } #> Formal class 'SpatialPointsDataFrame' [package \"sp\"] with 5 slots #>   ..@ data       :'data.frame':\t25357 obs. of  24 variables: #>   .. ..$ price     : int [1:25357] 303000 92000 90000 330000 185000 100000 43065 305000 56493 50000 ... #>   .. ..$ yrbuilt   : int [1:25357] 1978 1957 1937 1887 1978 1989 1927 1990 1877 1936 ... #>   .. ..$ stories   : Factor w/ 7 levels \"one\",\"bilevel\",..: 4 1 5 4 5 1 1 4 1 1 ... #>   .. ..$ TLA       : int [1:25357] 3273 920 1956 1430 2208 1232 832 3011 1034 960 ... #>   .. ..$ wall      : Factor w/ 7 levels \"stucdrvt\",\"ccbtile\",..: 7 3 1 6 7 6 6 7 6 6 ... #>   .. ..$ beds      : num [1:25357] 4 2 3 4 3 1 2 3 3 2 ... #>   .. ..$ baths     : num [1:25357] 3 1 1 1 2 1 1 2 1 1 ... #>   .. ..$ halfbaths : num [1:25357] 1 0 0 0 1 0 0 1 0 0 ... #>   .. ..$ frontage  : int [1:25357] 177 100 192 200 241 154 320 362 500 220 ... #>   .. ..$ depth     : int [1:25357] 0 0 0 217 0 1420 0 0 990 0 ... #>   .. ..$ garage    : Factor w/ 5 levels \"no garage\",\"basement\",..: 3 4 3 1 3 4 4 3 4 4 ... #>   .. ..$ garagesqft: int [1:25357] 625 308 480 0 528 1200 360 672 624 780 ... #>   .. ..$ rooms     : int [1:25357] 12 4 7 7 7 5 4 6 7 6 ... #>   .. ..$ lotsize   : int [1:25357] 53496 37900 52900 43560 225800 214100 23500 324900 354200 37000 ... #>   .. ..$ sdate     : int [1:25357] 960423 970421 931101 971223 950807 931101 951031 931229 960222 960607 ... #>   .. ..$ avalue    : int [1:25357] 306514 84628 126514 199228 192514 107914 49028 263400 76600 50714 ... #>   .. ..$ s1993     : int [1:25357] 0 0 1 0 0 1 0 1 0 0 ... #>   .. ..$ s1994     : int [1:25357] 0 0 0 0 0 0 0 0 0 0 ... #>   .. ..$ s1995     : int [1:25357] 0 0 0 0 1 0 1 0 0 0 ... #>   .. ..$ s1996     : int [1:25357] 1 0 0 0 0 0 0 0 1 1 ... #>   .. ..$ s1997     : int [1:25357] 0 1 0 1 0 0 0 0 0 0 ... #>   .. ..$ s1998     : int [1:25357] 0 0 0 0 0 0 0 0 0 0 ... #>   .. ..$ syear     : Factor w/ 6 levels \"1993\",\"1994\",..: 4 5 1 5 3 1 3 1 4 4 ... #>   .. ..$ age       : num [1:25357] 0.21 0.42 0.62 1.12 0.21 0.1 0.72 0.09 1.22 0.63 ... #>   ..@ coords.nrs : num(0)  #>   ..@ coords     : num [1:25357, 1:2] 484668 484876 485248 485764 488150 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:2] \"long\" \"lat\" #>   ..@ bbox       : num [1:2, 1:2] 484575 195270 538364 229836 #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : chr [1:2] \"long\" \"lat\" #>   .. .. ..$ : chr [1:2] \"min\" \"max\" #>   ..@ proj4string:Formal class 'CRS' [package \"sp\"] with 1 slot #>   .. .. ..@ projargs: chr \"+proj=lcc +lat_0=39.6666666666667 +lon_0=-82.5 +lat_1=41.7 +lat_2=40.4333333333333 +x_0=600000 +y_0=0 +ellps=GR\"| __truncated__ #>   .. .. ..$ comment: chr \"PROJCRS[\\\"unknown\\\",\\n    BASEGEOGCRS[\\\"unknown\\\",\\n        DATUM[\\\"Unknown based on GRS80 ellipsoid\\\",\\n      \"| __truncated__"},{"path":"https://jakubnowosad.com/spData/reference/huddersfield.html","id":null,"dir":"Reference","previous_headings":"","what":"Prevalence of respiratory symptoms — huddersfield","title":"Prevalence of respiratory symptoms — huddersfield","text":"Prevalence respiratory symptoms 71 school catchment areas Huddersfield, Northern England","code":""},{"path":"https://jakubnowosad.com/spData/reference/huddersfield.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prevalence of respiratory symptoms — huddersfield","text":"","code":"huddersfield"},{"path":"https://jakubnowosad.com/spData/reference/huddersfield.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Prevalence of respiratory symptoms — huddersfield","text":"data frame 71 observations following 2 variables. cases: Prevalence least mild conditions total: Number questionnaires returned","code":""},{"path":"https://jakubnowosad.com/spData/reference/huddersfield.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Prevalence of respiratory symptoms — huddersfield","text":"Martuzzi M, Elliott P (1996) Empirical Bayes estimation small area prevalence non-rare conditions, Statistics Medicine 15, 1867–1873, pp. 1870–1871.","code":""},{"path":"https://jakubnowosad.com/spData/reference/huddersfield.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prevalence of respiratory symptoms — huddersfield","text":"","code":"data(huddersfield) str(huddersfield) #> 'data.frame':\t71 obs. of  2 variables: #>  $ cases: int  21 22 47 3 8 25 31 26 12 5 ... #>  $ total: int  49 76 166 14 24 81 92 57 45 17 ..."},{"path":"https://jakubnowosad.com/spData/reference/jenks71.html","id":null,"dir":"Reference","previous_headings":"","what":"Illinois 1959 county gross farm product value per acre — jenks71","title":"Illinois 1959 county gross farm product value per acre — jenks71","text":"Classic data set choice class intervals choropleth maps.","code":""},{"path":"https://jakubnowosad.com/spData/reference/jenks71.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Illinois 1959 county gross farm product value per acre — jenks71","text":"","code":"jenks71"},{"path":"https://jakubnowosad.com/spData/reference/jenks71.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Illinois 1959 county gross farm product value per acre — jenks71","text":"data frame 102 observations following 2 variables. jenks71: numeric vector: Per acre value gross farm products dollars county Illinois #' 1959 area: numeric vector: county area square miles","code":""},{"path":"https://jakubnowosad.com/spData/reference/jenks71.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Illinois 1959 county gross farm product value per acre — jenks71","text":"Jenks, G. F., Caspall, F. C., 1971. \"Error choroplethic maps: definition, measurement, reduction\". Annals, Association American Geographers, 61 (2), 217–244","code":""},{"path":"https://jakubnowosad.com/spData/reference/jenks71.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Illinois 1959 county gross farm product value per acre — jenks71","text":"","code":"data(jenks71) jenks71 #>     jenks71      area #> 1     50.12  619.1250 #> 2     83.90  564.8666 #> 3     76.43  519.2851 #> 4     71.61  470.0023 #> 5     79.66  611.0690 #> 6     84.84  281.9802 #> 7     87.87  763.3878 #> 8     92.45  465.8562 #> 9    119.90  524.0520 #> 10   155.30  957.0728 #> 11   131.50  634.9357 #> 12   111.80  336.5958 #> 13    96.78  697.2824 #> 14    86.75  729.3617 #> 15    62.41  849.4304 #> 16    96.37  322.6725 #> 17    75.51  451.4319 #> 18    77.29 1147.8980 #> 19    85.41  873.4952 #> 20   116.40  825.9242 #> 21    58.50  430.4035 #> 22    75.29  569.4754 #> 23    66.32  172.2371 #> 24    62.65  681.3121 #> 25    80.45  288.2996 #> 26    72.76  720.1658 #> 27    63.67  398.5411 #> 28    60.27 1045.4367 #> 29    68.45  395.4899 #> 30   100.10  543.6524 #> 31    55.30 1117.9663 #> 32    54.07  486.3734 #> 33    57.49  631.0993 #> 34    73.52  542.7184 #> 35    68.25 1186.3229 #> 36    64.28  658.0177 #> 37    50.64  883.1348 #> 38    52.47  815.7020 #> 39    68.19  590.6621 #> 40    57.40  902.1977 #> 41    39.72  563.7366 #> 42    60.66  997.4052 #> 43    57.59  619.1182 #> 44    38.22  441.7262 #> 45    57.22  405.0457 #> 46    67.04  440.3459 #> 47    47.29  872.4719 #> 48    71.05  315.5443 #> 49    50.53  383.6820 #> 50    34.63  307.4830 #> 51    59.65  585.2796 #> 52    62.06  877.4056 #> 53    52.89  624.1747 #> 54    56.35  417.3518 #> 55    57.26  572.6364 #> 56    53.77  849.8499 #> 57    59.89  715.7982 #> 58    55.44  344.4581 #> 59    45.40  252.9370 #> 60    52.21  510.0139 #> 61    49.38  767.9963 #> 62    51.15  709.8996 #> 63    54.27  867.8165 #> 64    54.32  546.7774 #> 65    41.20  504.9391 #> 66    34.58  283.8793 #> 67    50.11  347.0351 #> 68    52.05  377.2332 #> 69    33.82  725.3493 #> 70    39.88  479.8502 #> 71    36.24  446.6893 #> 72    41.02  497.9817 #> 73    46.13  382.7055 #> 74    51.15  740.6097 #> 75    32.28  469.8219 #> 76    33.26  373.2986 #> 77    31.78  362.0195 #> 78    31.28  575.7414 #> 79    50.52  503.4115 #> 80    47.21  674.2223 #> 81    32.69  715.4710 #> 82    38.30  229.4964 #> 83    33.83  222.6388 #> 84    40.30  397.9347 #> 85    40.62  564.3519 #> 86    32.14  583.6990 #> 87    31.66  502.5933 #> 88    26.09  435.8743 #> 89    39.84  597.3510 #> 90    24.83  446.9202 #> 91    28.20  431.3176 #> 92    31.19  602.6493 #> 93    37.57  332.2962 #> 94    27.16  386.9290 #> 95    23.42  444.3156 #> 96    18.57  348.8593 #> 97    30.97  422.1927 #> 98    17.82  374.5757 #> 99    15.57  181.7830 #> 100   15.93  242.0478 #> 101   28.71  252.5336 #> 102   32.22  202.8932"},{"path":"https://jakubnowosad.com/spData/reference/lnd.html","id":null,"dir":"Reference","previous_headings":"","what":"The boroughs of London — lnd","title":"The boroughs of London — lnd","text":"Polygons representing large administrative zones London","code":""},{"path":"https://jakubnowosad.com/spData/reference/lnd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The boroughs of London — lnd","text":"","code":"lnd"},{"path":"https://jakubnowosad.com/spData/reference/lnd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The boroughs of London — lnd","text":"NAME: Borough name GSS_CODE: Official code HECTARES: many hectares NONLD_AREA: Area outside London ONS_INNER: Office national statistics code SUB_2009: Empty column SUB_2006: Empty column geometry: sfc_MULTIPOLYGON","code":""},{"path":"https://jakubnowosad.com/spData/reference/lnd.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"The boroughs of London — lnd","text":"https://github.com/Robinlovelace/Creating-maps--R","code":""},{"path":"https://jakubnowosad.com/spData/reference/lnd.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The boroughs of London — lnd","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(lnd)   summary(lnd)   plot(st_geometry(lnd)) }"},{"path":"https://jakubnowosad.com/spData/reference/nc.sids.html","id":null,"dir":"Reference","previous_headings":"","what":"North Carolina SIDS data — nc.sids","title":"North Carolina SIDS data — nc.sids","text":"(Use example(nc.sids) read data set shapefile, together import two different list neighbours). nc.sids data frame 100 rows 21 columns. contains data given Cressie (1991, pp. 386-9), Cressie Read (1985) Cressie Chan (1989) sudden infant deaths North Carolina 1974-78 1979-84. data set also contains neighbour list given Cressie Chan (1989) omitting self-neighbours (ncCC89.nb), neighbour list given Cressie Read (1985) contiguities (ncCR85.nb). data ordered county ID number, alphabetically source tables sidspolys \"polylist\" object polygon boundaries, sidscents matrix centroids.","code":""},{"path":"https://jakubnowosad.com/spData/reference/nc.sids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North Carolina SIDS data — nc.sids","text":"","code":"nc.sids"},{"path":"https://jakubnowosad.com/spData/reference/nc.sids.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"North Carolina SIDS data — nc.sids","text":"data frame contains following columns: SP_ID: SpatialPolygons ID CNTY_ID: county ID east: eastings, county seat, miles, local projection north: northings, county seat, miles, local projection L_id: Cressie Read (1985) L index M_id: Cressie Read (1985) M index names: County names AREA: County polygon areas degree units PERIMETER: County polygon perimeters degree units CNTY_: Internal county ID NAME: County names FIPS: County ID FIPSNO: County ID CRESS_ID: Cressie papers ID BIR74: births, 1974-78 SID74: SID deaths, 1974-78 NWBIR74: non-white births, 1974-78 BIR79: births, 1979-84 SID79: SID deaths, 1979-84 NWBIR79: non-white births, 1979-84","code":""},{"path":"https://jakubnowosad.com/spData/reference/nc.sids.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"North Carolina SIDS data — nc.sids","text":"Cressie, N (1991), Statistics spatial data. New York: Wiley, pp. 386–389; Cressie, N, Chan NH (1989) Spatial modelling regional variables. Journal American Statistical Association, 84, 393–401; Cressie, N, Read, TRC (1985) sudden infant deaths come clusters? Statistics Decisions Supplement Issue 2, 333–349; http://sal.agecon.uiuc.edu/datasets/sids.zip.","code":""},{"path":"https://jakubnowosad.com/spData/reference/nc.sids.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North Carolina SIDS data — nc.sids","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   if (requireNamespace(\"spdep\", quietly = TRUE)) {     library(spdep)     nc.sids <- sf::st_read(system.file(\"shapes/sids.gpkg\", package=\"spData\")[1])     row.names(nc.sids) <- as.character(nc.sids$FIPS)     rn <- row.names(nc.sids)     ncCC89_nb <- read.gal(system.file(\"weights/ncCC89.gal\", package=\"spData\")[1],                           region.id=rn)     ncCR85_nb <- read.gal(system.file(\"weights/ncCR85.gal\", package=\"spData\")[1],                           region.id=rn)                                plot(sf::st_geometry(nc.sids), border=\"grey\")     plot(ncCR85_nb, sf::st_geometry(nc.sids), add=TRUE, col=\"blue\")     plot(sf::st_geometry(nc.sids), border=\"grey\")     plot(ncCC89_nb, sf::st_geometry(nc.sids), add=TRUE, col=\"blue\")   } } #> Reading layer `sids' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/sids.gpkg' using driver `GPKG' #> Simple feature collection with 100 features and 22 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965 #> Geodetic CRS:  NAD27 #> Warning: neighbour object has 3 sub-graphs #> Warning: st_point_on_surface may not give correct results for longitude/latitude data  #> Warning: st_point_on_surface may not give correct results for longitude/latitude data"},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":null,"dir":"Reference","previous_headings":"","what":"New York leukemia data — nydata","title":"New York leukemia data — nydata","text":"New York leukemia data taken data sets supporting Waller Gotway 2004 (data loaded running example(NY_data) demonstrate spatial data import techniques)","code":""},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New York leukemia data — nydata","text":"","code":"nydata"},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"New York leukemia data — nydata","text":"data frame 281 observations following 12 variables, binary coded spatial weights used source. AREANAME: name census tract AREAKEY: unique FIPS code tract X: x-coordinate tract centroid (km) Y: y-coordinate tract centroid (km) POP8: population size (1980 U.S. Census) TRACTCAS: number cases 1978-1982 PROPCAS: proportion cases per tract PCTOWNHOME: percentage people tract owning home PCTAGE65P: percentage people tract aged 65 Z: ransformed propoprtions AVGIDIST: average distance centroid TCE sites PEXPOSURE: \"exposure potential\": inverse distance census tract centroid nearest TCE site, IDIST, transformed via log(100*IDIST) Cases: TRACTCAS digits Xm: X metres Ym: Y metres Xshift: feature offset Yshift: feature offset","code":""},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"New York leukemia data — nydata","text":"http://www.sph.emory.edu/~lwaller/ch9index.htm","code":""},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"New York leukemia data — nydata","text":"examples section shows DBF files book website Chapter 9 converted nydata data frame listw_NY spatial weights list. shapes directory includes original version UTM18 census tract boundaries imported BNA format (http://sedac.ciesin.columbia.edu/ftpsite/pub/census/usa/tiger/ny/bna_st/t8_36.zip) OGR/GDAL BNA driver available. NY8_utm18 shapefile constructed using bna2mif converter converted shapefile format adding data using writeOGR. new file NY8_bna_utm18.gpkg constructed original BNA file, read using OGR BNA driver GEOS support. NY8 shapefile GeoPackage NY8_utm18.gpkg include invalid polygons, OGR BNA driver may GEOS support (used ), tract polygon objects NY8_bna_utm18.gpkg valid.","code":""},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"New York leukemia data — nydata","text":"Waller, L. C. Gotway (2004) Applied Spatial Statistics Public Health Data. New York: John Wiley Sons.","code":""},{"path":"https://jakubnowosad.com/spData/reference/nydata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New York leukemia data — nydata","text":"","code":"## NY leukemia # \\donttest{ if (requireNamespace(\"sf\", quietly = TRUE)) { library(foreign) nydata <- read.dbf(system.file(\"misc/nydata.dbf\", package=\"spData\")[1]) nydata <- sf::st_as_sf(nydata, coords=c(\"X\", \"Y\"), remove=FALSE) plot(sf::st_geometry(nydata))  nyadjmat <- as.matrix(read.dbf(system.file(\"misc/nyadjwts.dbf\",                                            package=\"spData\")[1])[-1]) ID <- as.character(names(read.dbf(system.file(\"misc/nyadjwts.dbf\",                                               package=\"spData\")[1]))[-1]) identical(substring(ID, 2, 10), substring(as.character(nydata$AREAKEY), 2, 10))  if (requireNamespace(\"sf\", quietly = TRUE)) { library(spdep) listw_NY <- mat2listw(nyadjmat, as.character(nydata$AREAKEY), style=\"B\") } }  #> Field name: ‘Z600701190’ changed to: ‘Z600701190.1’ #> Field name: ‘Z600701190’ changed to: ‘Z600701190.2’ #> Field name: ‘Z600701200’ changed to: ‘Z600701200.1’ #> Field name: ‘Z600701210’ changed to: ‘Z600701210.1’ #> Field name: ‘Z600701210’ changed to: ‘Z600701210.2’ #> Field name: ‘Z600701220’ changed to: ‘Z600701220.1’ #> Field name: ‘Z600701270’ changed to: ‘Z600701270.1’ #> Field name: ‘Z600701320’ changed to: ‘Z600701320.1’ #> Field name: ‘Z600701330’ changed to: ‘Z600701330.1’ #> Field name: ‘Z605303010’ changed to: ‘Z605303010.1’ #> Field name: ‘Z605303010’ changed to: ‘Z605303010.2’ #> Field name: ‘Z605303040’ changed to: ‘Z605303040.1’ #> Field name: ‘Z605303040’ changed to: ‘Z605303040.2’ #> Field name: ‘Z605303050’ changed to: ‘Z605303050.1’ #> Field name: ‘Z606700170’ changed to: ‘Z606700170.1’ #> Field name: ‘Z606700360’ changed to: ‘Z606700360.1’ #> Field name: ‘Z606700560’ changed to: ‘Z606700560.1’ #> Field name: ‘Z606700610’ changed to: ‘Z606700610.1’ #> Field name: ‘Z606700610’ changed to: ‘Z606700610.2’ #> Field name: ‘Z606701100’ changed to: ‘Z606701100.1’ #> Field name: ‘Z606701110’ changed to: ‘Z606701110.1’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.1’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.2’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.3’ #> Field name: ‘Z606701140’ changed to: ‘Z606701140.1’ #> Field name: ‘Z606701520’ changed to: ‘Z606701520.1’ #> Field name: ‘Z606701650’ changed to: ‘Z606701650.1’ #> Field name: ‘Z606701680’ changed to: ‘Z606701680.1’ #> Field name: ‘Z606701690’ changed to: ‘Z606701690.1’ #> Field name: ‘Z600701190’ changed to: ‘Z600701190.1’ #> Field name: ‘Z600701190’ changed to: ‘Z600701190.2’ #> Field name: ‘Z600701200’ changed to: ‘Z600701200.1’ #> Field name: ‘Z600701210’ changed to: ‘Z600701210.1’ #> Field name: ‘Z600701210’ changed to: ‘Z600701210.2’ #> Field name: ‘Z600701220’ changed to: ‘Z600701220.1’ #> Field name: ‘Z600701270’ changed to: ‘Z600701270.1’ #> Field name: ‘Z600701320’ changed to: ‘Z600701320.1’ #> Field name: ‘Z600701330’ changed to: ‘Z600701330.1’ #> Field name: ‘Z605303010’ changed to: ‘Z605303010.1’ #> Field name: ‘Z605303010’ changed to: ‘Z605303010.2’ #> Field name: ‘Z605303040’ changed to: ‘Z605303040.1’ #> Field name: ‘Z605303040’ changed to: ‘Z605303040.2’ #> Field name: ‘Z605303050’ changed to: ‘Z605303050.1’ #> Field name: ‘Z606700170’ changed to: ‘Z606700170.1’ #> Field name: ‘Z606700360’ changed to: ‘Z606700360.1’ #> Field name: ‘Z606700560’ changed to: ‘Z606700560.1’ #> Field name: ‘Z606700610’ changed to: ‘Z606700610.1’ #> Field name: ‘Z606700610’ changed to: ‘Z606700610.2’ #> Field name: ‘Z606701100’ changed to: ‘Z606701100.1’ #> Field name: ‘Z606701110’ changed to: ‘Z606701110.1’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.1’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.2’ #> Field name: ‘Z606701120’ changed to: ‘Z606701120.3’ #> Field name: ‘Z606701140’ changed to: ‘Z606701140.1’ #> Field name: ‘Z606701520’ changed to: ‘Z606701520.1’ #> Field name: ‘Z606701650’ changed to: ‘Z606701650.1’ #> Field name: ‘Z606701680’ changed to: ‘Z606701680.1’ #> Field name: ‘Z606701690’ changed to: ‘Z606701690.1’ # }"},{"path":"https://jakubnowosad.com/spData/reference/nz.html","id":null,"dir":"Reference","previous_headings":"","what":"Regions in New Zealand — nz","title":"Regions in New Zealand — nz","text":"Polygons representing 16 regions New Zealand (2018). See https://en.wikipedia.org/wiki/Regions_of_New_Zealand description regions https://www.stats.govt.nz information data source","code":""},{"path":"https://jakubnowosad.com/spData/reference/nz.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regions in New Zealand — nz","text":"","code":"nz"},{"path":"https://jakubnowosad.com/spData/reference/nz.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regions in New Zealand — nz","text":"FORMAT: Name: Name Island: Island Land_area: Land area Population: Population Median_income: Median income (NZD) Sex_ratio: Sex ratio (male/female) geom: sfc_MULTIPOLYGON","code":""},{"path":"https://jakubnowosad.com/spData/reference/nz.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regions in New Zealand — nz","text":"https://www.stats.govt.nz https://en.wikipedia.org/wiki/Regions_of_New_Zealand","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/nz.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Regions in New Zealand — nz","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   summary(nz)   plot(nz) }  if (FALSE) { # \\dontrun{ # Find \"Regional Council 2018 Clipped (generalised)\" # select the GeoPackage option in the \"Vectors/tables\" dropdown # at https://datafinder.stats.govt.nz/data/ (requires registration) # Save the result as: unzip(\"statsnzregional-council-2018-clipped-generalised-GPKG.zip\") library(sf) library(tidyverse) nz_full = st_read(\"regional-council-2018-clipped-generalised.gpkg\") print(object.size(nz_full), units = \"Kb\") # 14407.2 Kb nz = rmapshaper::ms_simplify(nz_full, keep = 0.001, sys = TRUE) print(object.size(nz), units = \"Kb\") # 39.9 Kb names(nz) nz$REGC2018_V1_00_NAME nz = filter(nz, REGC2018_V1_00_NAME != \"Area Outside Region\") %>%         select(Name = REGC2018_V1_00_NAME, `Land_area` = LAND_AREA_SQ_KM) # regions basic info # devtools::install_github(\"hadley/rvest\") library(rvest) doc = read_html(\"https://en.wikipedia.org/wiki/Regions_of_New_Zealand\") %>%         html_nodes(\"div table\") tab = doc[[3]] %>% html_table() tab = tab %>% select(Name = Region, Population = `Population[20]`, Island) tab = tab %>% mutate(Population = str_replace_all(Population, \",\", \"\")) %>%         mutate(Population = as.numeric(Population)) %>%         mutate(Name = str_remove_all(Name, \" \\\\([1-9]\\\\)?.+\")) nz$Name = as.character(nz$Name) nz$Name = str_remove(nz$Name, \" Region\") nz$Name %in% tab$Name # regions additional info library(nzcensus) nz_add_data = REGC2013 %>%          select(Name = REGC2013_N, Median_income = MedianIncome2013,                 PropFemale2013, PropMale2013) %>%          mutate(Sex_ratio = PropMale2013 / PropFemale2013) %>%          mutate(Name = gsub(\" Region\", \"\", Name)) %>%          select(Name, Median_income, Sex_ratio) # data join nz = left_join(nz, tab, by = \"Name\") %>%          left_join(nz_add_data, by = \"Name\") %>%          select(Name, Island, Land_area, Population, Median_income, Sex_ratio) } # }"},{"path":"https://jakubnowosad.com/spData/reference/nz_height.html","id":null,"dir":"Reference","previous_headings":"","what":"High points in New Zealand — nz_height","title":"High points in New Zealand — nz_height","text":"Top 101 heighest points New Zealand (2017). See https://data.linz.govt.nz/layer/50284-nz-height-points-topo-150k/ details.","code":""},{"path":"https://jakubnowosad.com/spData/reference/nz_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"High points in New Zealand — nz_height","text":"","code":"nz_height"},{"path":"https://jakubnowosad.com/spData/reference/nz_height.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"High points in New Zealand — nz_height","text":"FORMAT: t50_fid: ID elevation: Height sea level m geometry: sfc_POINT","code":""},{"path":"https://jakubnowosad.com/spData/reference/nz_height.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"High points in New Zealand — nz_height","text":"https://data.linz.govt.nz","code":""},{"path":"https://jakubnowosad.com/spData/reference/nz_height.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"High points in New Zealand — nz_height","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   summary(nz_height)   plot(nz$geom)   plot(nz_height$geom, add = TRUE) }  if (FALSE) { # \\dontrun{ library(dplyr) # After downloading data unzip(\"lds-nz-height-points-topo-150k-SHP.zip\") nz_height = st_read(\"nz-height-points-topo-150k.shp\") %>%    top_n(n = 100, wt = elevation) library(tmap) tmap_mode(\"view\") qtm(nz) +   qtm(nz_height) f = list.files(pattern = \"*nz-height*\") file.remove(f) } # }"},{"path":"https://jakubnowosad.com/spData/reference/properties.html","id":null,"dir":"Reference","previous_headings":"","what":"Dataset of properties in the municipality of Athens (sf) — properties","title":"Dataset of properties in the municipality of Athens (sf) — properties","text":"dataset apartments municipality Athens 2017. Point location properties given together main characteristics distance closest metro/train station.","code":""},{"path":"https://jakubnowosad.com/spData/reference/properties.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dataset of properties in the municipality of Athens (sf) — properties","text":"","code":"properties"},{"path":"https://jakubnowosad.com/spData/reference/properties.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dataset of properties in the municipality of Athens (sf) — properties","text":"sf object 1000 points following 6 variables. id: unique identifier property. size : size property (unit: square meters) price : asking price (unit: euros) prpsqm : asking price per squre meter (unit: euroes/square meter). age : Age property 2017 (unit: years). dist_metro: distance closest train/metro station (unit: meters).","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/properties.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dataset of properties in the municipality of Athens (sf) — properties","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   if (requireNamespace(\"spdep\", quietly = TRUE)) {     library(sf)     library(spdep)          data(properties)          summary(properties$prpsqm)          pr.nb.800 <- dnearneigh(properties, 0, 800)     pr.listw <- nb2listw(pr.nb.800)          moran.test(properties$prpsqm, pr.listw)     moran.plot(properties$prpsqm, pr.listw, xlab = \"Price/m^2\", ylab = \"Lagged\")   } } #> Warning: neighbour object has 2 sub-graphs"},{"path":"https://jakubnowosad.com/spData/reference/seine.html","id":null,"dir":"Reference","previous_headings":"","what":"Small river network in France — seine","title":"Small river network in France — seine","text":"Lines representing Seine, Marne Yonne rivers.","code":""},{"path":"https://jakubnowosad.com/spData/reference/seine.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Small river network in France — seine","text":"","code":"seine"},{"path":"https://jakubnowosad.com/spData/reference/seine.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Small river network in France — seine","text":"FORMAT: name: name geometry: sfc_MULTILINESTRING object RGF93 / Lambert-93 CRS.","code":""},{"path":"https://jakubnowosad.com/spData/reference/seine.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Small river network in France — seine","text":"https://www.naturalearthdata.com/","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/seine.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Small river network in France — seine","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   seine   plot(seine) }  if (FALSE) { # \\dontrun{ library(sf) library(rnaturalearth) library(tidyverse)  seine = ne_download(scale = 10, type = \"rivers_lake_centerlines\",                      category = \"physical\", returnclass = \"sf\") %>%          filter(name %in% c(\"Yonne\", \"Seine\", \"Marne\")) %>%          select(name = name_en) %>%          st_transform(2154) } # }"},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":null,"dir":"Reference","previous_headings":"","what":"US State Visibility Based Map — state.vbm","title":"US State Visibility Based Map — state.vbm","text":"SpatialPolygonsDataFrame object plot Visibility Based Map.","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US State Visibility Based Map — state.vbm","text":"","code":"state.vbm"},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US State Visibility Based Map — state.vbm","text":"object class SpatialPolygonsDataFrame 50 rows 2 columns.","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US State Visibility Based Map — state.vbm","text":"data converted maps library S-PLUS.  S-PLUS uses map permission author. version data received permission author (attempt made, refused), uses feel fall fair use violate copyright, need decide applications.","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"US State Visibility Based Map — state.vbm","text":"SpatialPolygonsDataFrame object plot map US states sizes states adjusted equal. map can useful plotting state data using colors patterns without larger states dominating smallest states lost. original map copyrighted Mark Monmonier.  Official publications based map acknowledge . Comercial publications maps based probably need permission use.","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"US State Visibility Based Map — state.vbm","text":"http://www.markmonmonier.com/index.htm, http://euclid.psych.yorku.ca/SCS/Gallery/bright-ideas.html","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"US State Visibility Based Map — state.vbm","text":"Greg Snow greg.snow@imail.org (compilation)","code":""},{"path":"https://jakubnowosad.com/spData/reference/state.vbm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US State Visibility Based Map — state.vbm","text":"","code":"if (requireNamespace(\"sp\", quietly = TRUE)) {   library(sp)   data(state.vbm)   plot(state.vbm)    tmp <- state.x77[, 'HS Grad']   tmp2 <- cut(tmp, seq(min(tmp), max(tmp), length.out=11),             include.lowest=TRUE)   plot(state.vbm, col=cm.colors(10)[tmp2]) }"},{"path":"https://jakubnowosad.com/spData/reference/urban_agglomerations.html","id":null,"dir":"Reference","previous_headings":"","what":"Major urban areas worldwide — urban_agglomerations","title":"Major urban areas worldwide — urban_agglomerations","text":"Dataset 'long' form United Nations population division projections 2050. Includes top 30 largest areas population 5 year intervals.","code":""},{"path":"https://jakubnowosad.com/spData/reference/urban_agglomerations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Major urban areas worldwide — urban_agglomerations","text":"","code":"urban_agglomerations"},{"path":"https://jakubnowosad.com/spData/reference/urban_agglomerations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Major urban areas worldwide — urban_agglomerations","text":"Selected variables: year: Year population estimate country_code: Code country urban_agglomeration: Name urban agglomeration population_millions: Estimated human population geometry: sfc_POINT","code":""},{"path":"https://jakubnowosad.com/spData/reference/urban_agglomerations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Major urban areas worldwide — urban_agglomerations","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   plot(urban_agglomerations) }  # Code used to download the data: if (FALSE) { # \\dontrun{ f = \"WUP2018-F11b-30_Largest_Cities_in_2018_by_time.xls\" download.file(   destfile = f,   url = paste0(\"https://population.un.org/wup/Download/Files/\", f)  ) library(dplyr) library(sf) urban_agglomerations = readxl::read_excel(f, skip = 16) %>%     st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = 4326) names(urban_agglomerations) names(urban_agglomerations) <- gsub(\" |\\\\n\", \"_\", tolower(names(urban_agglomerations)) ) %>%          gsub(\"\\\\(|\\\\)\", \"\", .) names(urban_agglomerations) urban_agglomerations usethis::use_data(urban_agglomerations, overwrite = TRUE) file.remove(\"WUP2018-F11b-30_Largest_Cities_in_2018_by_time.xls\") } # }"},{"path":"https://jakubnowosad.com/spData/reference/us_states.html","id":null,"dir":"Reference","previous_headings":"","what":"US states polygons — us_states","title":"US states polygons — us_states","text":"object loaded sf object containing contiguous United States data US Census Bureau variables American Community Survey (ACS)","code":""},{"path":"https://jakubnowosad.com/spData/reference/us_states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US states polygons — us_states","text":"","code":"us_states"},{"path":"https://jakubnowosad.com/spData/reference/us_states.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US states polygons — us_states","text":"Formal class 'sf' [package \"sf\"]; data contains data.frame 49 obs. 7 variables: GEOID: character vector geographic identifiers NAME: character vector state names REGION: character vector region names AREA: area square kilometers units class total_pop_10: numerical vector total population 2010 total_pop_15: numerical vector total population 2015 geometry: sfc_MULTIPOLYGON object geographical coordinates using NAD83 datum.","code":""},{"path":"https://jakubnowosad.com/spData/reference/us_states.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US states polygons — us_states","text":"https://www.census.gov/geographies/mapping-files/time-series/geo/tiger-line-file.html","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/us_states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US states polygons — us_states","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(us_states)    plot(us_states[\"REGION\"]) }"},{"path":"https://jakubnowosad.com/spData/reference/us_states_df.html","id":null,"dir":"Reference","previous_headings":"","what":"the American Community Survey (ACS) data — us_states_df","title":"the American Community Survey (ACS) data — us_states_df","text":"object loaded data.frame object containing US states data American Community Survey (ACS)","code":""},{"path":"https://jakubnowosad.com/spData/reference/us_states_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"the American Community Survey (ACS) data — us_states_df","text":"","code":"us_states_df"},{"path":"https://jakubnowosad.com/spData/reference/us_states_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"the American Community Survey (ACS) data — us_states_df","text":"Formal class 'data.frame'; data contains data.frame 51 obs. 5 variables: state: character vector state names median_income_10: numerical vector median income 2010 median_income_15: numerical vector median income 2010 poverty_level_10: numerical vector number people income poverty level 2010 poverty_level_15: numerical vector number people income poverty level 2015","code":""},{"path":"https://jakubnowosad.com/spData/reference/us_states_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"the American Community Survey (ACS) data — us_states_df","text":"https://www.census.gov/programs-surveys/acs/","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/us_states_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"the American Community Survey (ACS) data — us_states_df","text":"","code":"data(us_states_df)  summary(us_states_df) #>     state           median_income_10 median_income_15 poverty_level_10  #>  Length:51          Min.   :20019    Min.   :21438    Min.   :  52297   #>  Class :character   1st Qu.:23995    1st Qu.:24952    1st Qu.: 204702   #>  Mode  :character   Median :25432    Median :26943    Median : 577247   #>                     Mean   :26144    Mean   :27500    Mean   : 802304   #>                     3rd Qu.:29072    3rd Qu.:30376    3rd Qu.: 822568   #>                     Max.   :35264    Max.   :40884    Max.   :4919945   #>  poverty_level_15  #>  Min.   :  64995   #>  1st Qu.: 238146   #>  Median : 636947   #>  Mean   : 936256   #>  3rd Qu.: 961445   #>  Max.   :6135142"},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":null,"dir":"Reference","previous_headings":"","what":"US 1960 used car prices — used.cars","title":"US 1960 used car prices — used.cars","text":"used.cars data frame 48 rows 2 columns. data set includes neighbours list 48 states excluding DC poly2nb().","code":""},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"US 1960 used car prices — used.cars","text":"","code":"used.cars"},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"US 1960 used car prices — used.cars","text":"data frame contains following columns: tax.charges: taxes delivery charges 1955-9 new cars price.1960: 1960 used car prices state","code":""},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"US 1960 used car prices — used.cars","text":"Hanna, F. . 1966 Effects regional differences taxes transport charges automobile consumption, Ostry, S., Rhymes, J. K. (eds) Papers regional statistical studies, Toronto: Toronto University Press, pp. 199-223.","code":""},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"US 1960 used car prices — used.cars","text":"Hepple, L. W. 1976 maximum likelihood model econometric estimation spatial series, Masser, (ed) Theory practice regional science, London: Pion, pp. 90-104.","code":""},{"path":"https://jakubnowosad.com/spData/reference/used.cars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"US 1960 used car prices — used.cars","text":"","code":"if (requireNamespace(\"spdep\", quietly = TRUE)) {   library(spdep)   data(used.cars)   moran.test(used.cars$price.1960, nb2listw(usa48.nb))   moran.plot(used.cars$price.1960, nb2listw(usa48.nb),            labels=rownames(used.cars))   uc.lm <- lm(price.1960 ~ tax.charges, data=used.cars)   summary(uc.lm)    lm.morantest(uc.lm, nb2listw(usa48.nb))   lm.morantest.sad(uc.lm, nb2listw(usa48.nb))   lm.LMtests(uc.lm, nb2listw(usa48.nb)) # \\donttest{   if (requireNamespace(\"spatialreg\", quietly = TRUE)) {     library(spatialreg)     uc.err <- errorsarlm(price.1960 ~ tax.charges, data=used.cars,                        nb2listw(usa48.nb), tol.solve=1.0e-13,                         control=list(tol.opt=.Machine$double.eps^0.3))     summary(uc.err)     uc.lag <- lagsarlm(price.1960 ~ tax.charges, data=used.cars,                      nb2listw(usa48.nb), tol.solve=1.0e-13,                       control=list(tol.opt=.Machine$double.eps^0.3))     summary(uc.lag)     uc.lag1 <- lagsarlm(price.1960 ~ 1, data=used.cars,                       nb2listw(usa48.nb), tol.solve=1.0e-13,                        control=list(tol.opt=.Machine$double.eps^0.3))     summary(uc.lag1)     uc.err1 <- errorsarlm(price.1960 ~ 1, data=used.cars,                         nb2listw(usa48.nb), tol.solve=1.0e-13,                          control=list(tol.opt=.Machine$double.eps^0.3),                         Durbin=FALSE)     summary(uc.err1)   } # } }  #> Please update scripts to use lm.RStests in place of lm.LMtests #> Loading required package: Matrix #>  #> Attaching package: ‘spatialreg’ #> The following objects are masked from ‘package:spdep’: #>  #>     get.ClusterOption, get.VerboseOption, get.ZeroPolicyOption, #>     get.coresOption, get.mcOption, set.ClusterOption, #>     set.VerboseOption, set.ZeroPolicyOption, set.coresOption, #>     set.mcOption #>  #> Call: #> errorsarlm(formula = price.1960 ~ 1, data = used.cars, listw = nb2listw(usa48.nb),  #>     Durbin = FALSE, tol.solve = 1e-13, control = list(tol.opt = .Machine$double.eps^0.3)) #>  #> Residuals: #>      Min       1Q   Median       3Q      Max  #> -76.1518 -18.2214   5.2489  21.6309  63.4983  #>  #> Type: error  #> Coefficients: (asymptotic standard errors)  #>             Estimate Std. Error z value  Pr(>|z|) #> (Intercept) 1542.607     27.321  56.462 < 2.2e-16 #>  #> Lambda: 0.82919, LR test value: 54.202, p-value: 1.8086e-13 #> Asymptotic standard error: 0.070993 #>     z-value: 11.68, p-value: < 2.22e-16 #> Wald statistic: 136.42, p-value: < 2.22e-16 #>  #> Log likelihood: -240.977 for error model #> ML residual variance (sigma squared): 1045.4, (sigma: 32.333) #> Number of observations: 48  #> Number of parameters estimated: 3  #> AIC: 487.95, (AIC for lm: 540.16) #>"},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":null,"dir":"Reference","previous_headings":"","what":"Mercer and Hall wheat yield data — wheat","title":"Mercer and Hall wheat yield data — wheat","text":"Mercer Hall wheat yield data, based version Cressie (1993), p. 455.","code":""},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mercer and Hall wheat yield data — wheat","text":"","code":"wheat"},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mercer and Hall wheat yield data — wheat","text":"format object generated running data(wheat) three column data frame made available Hongfei Li. example section shows convert object used demonstrating aple function, formal class 'SpatialPolygonsDataFrame' [package \"sp\"] 5 slots; data slot data frame 500 observations following 6 variables. lat: local coordinates northings ordered north south yield: Mercer Hall wheat yield data r: rows south north; levels distance units plot centres c: columns west east; levels distance units plot centres lon: local coordinates eastings lat1: local coordinates northings ordered south north","code":""},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Mercer and Hall wheat yield data — wheat","text":"Cressie, N. . C. (1993) Statistics Spatial Data. Wiley, New York, p. 455.","code":""},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mercer and Hall wheat yield data — wheat","text":"value 4.03 changed 4.33 (wheat[71,]) 13 January 2014; thanks Sandy Burden; cross-checked http://www.itc.nl/personal/rossiter/teach/R/mhw.csv, agrees.","code":""},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mercer and Hall wheat yield data — wheat","text":"Mercer, W. B. Hall, . D. (1911) experimental error field trials. Journal Agricultural Science 4, 107-132.","code":""},{"path":"https://jakubnowosad.com/spData/reference/wheat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mercer and Hall wheat yield data — wheat","text":"","code":"# \\donttest{ if (requireNamespace(\"sp\", quietly = TRUE)) { library(sp) data(wheat) wheat$lat1 <- 69 - wheat$lat wheat$r <- factor(wheat$lat1) wheat$c <- factor(wheat$lon) wheat_sp <- wheat coordinates(wheat_sp) <- c(\"lon\", \"lat1\") wheat_spg <- wheat_sp  gridded(wheat_spg) <- TRUE wheat_spl <- as(wheat_spg, \"SpatialPolygons\") df <- as(wheat_spg, \"data.frame\") row.names(df) <- sapply(slot(wheat_spl, \"polygons\"),                         function(x) slot(x, \"ID\")) wheat <- SpatialPolygonsDataFrame(wheat_spl, data=df) } # }  if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   wheat <- st_read(system.file(\"shapes/wheat.gpkg\", package=\"spData\"))   plot(wheat) } #> Reading layer `wheat' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/wheat.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 500 features and 8 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 1.255 ymin: 1.35 xmax: 64.005 ymax: 67.35 #> Projected CRS: Undefined Cartesian SRS with unknown unit"},{"path":"https://jakubnowosad.com/spData/reference/world.html","id":null,"dir":"Reference","previous_headings":"","what":"World country polygons — world","title":"World country polygons — world","text":"object loaded sf object containing world map data Natural Earth variables World Bank","code":""},{"path":"https://jakubnowosad.com/spData/reference/world.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World country polygons — world","text":"","code":"world"},{"path":"https://jakubnowosad.com/spData/reference/world.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World country polygons — world","text":"Formal class 'sf' [package \"sf\"]; data contains data.frame 177 obs. 11 variables: iso_a2: character vector ISO 2 character country codes name_long: character vector country names continent: character vector continent names region_un: character vector region names subregion: character vector subregion names type: character vector type names area_km2: integer vector area values pop: integer vector population 2014 lifeExp: integer vector life expectancy birth 2014 gdpPercap: integer vector per-capita GDP 2014 geom: sfc_MULTIPOLYGON object geographical coordinates using WGS84 datum.","code":""},{"path":"https://jakubnowosad.com/spData/reference/world.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World country polygons — world","text":"https://www.naturalearthdata.com/ https://data.worldbank.org/","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/world.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World country polygons — world","text":"","code":"if (requireNamespace(\"sf\", quietly = TRUE)) {   library(sf)   data(world)   # or   world <- st_read(system.file(\"shapes/world.gpkg\", package=\"spData\"))    plot(world) } #> Reading layer `world' from data source  #>   `/home/runner/work/_temp/Library/spData/shapes/world.gpkg'  #>   using driver `GPKG' #> Simple feature collection with 177 features and 10 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.9 xmax: 180 ymax: 83.64513 #> Geodetic CRS:  WGS 84"},{"path":"https://jakubnowosad.com/spData/reference/worldbank_df.html","id":null,"dir":"Reference","previous_headings":"","what":"World Bank data — worldbank_df","title":"World Bank data — worldbank_df","text":"object loaded data.frame object containing data World Bank","code":""},{"path":"https://jakubnowosad.com/spData/reference/worldbank_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Bank data — worldbank_df","text":"","code":"worldbank_df"},{"path":"https://jakubnowosad.com/spData/reference/worldbank_df.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"World Bank data — worldbank_df","text":"Formal class 'data.frame'; data contains data.frame 177 obs. 7 variables: name: character vector country names iso_a2: character vector ISO 2 character country codes HDI: human development index (HDI) urban_pop: urban population unemployment: unemployment, total (% total labor force) pop_growth: population growth (annual %) literacy: adult literacy rate, population 15+ years, sexes (%)","code":""},{"path":"https://jakubnowosad.com/spData/reference/worldbank_df.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World Bank data — worldbank_df","text":"https://data.worldbank.org/","code":""},{"path":[]},{"path":"https://jakubnowosad.com/spData/reference/worldbank_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World Bank data — worldbank_df","text":"","code":"data(worldbank_df) # or worldbank_df <- read.csv(system.file(\"misc/worldbank_df.csv\", package=\"spData\"))  summary(worldbank_df) #>      name              iso_a2               HDI           urban_pop         #>  Length:177         Length:177         Min.   :0.2970   Min.   :    48439   #>  Class :character   Class :character   1st Qu.:0.3725   1st Qu.:  2128406   #>  Mode  :character   Mode  :character   Median :0.4540   Median :  5174900   #>                                        Mean   :0.4681   Mean   : 22908339   #>                                        3rd Qu.:0.5335   3rd Qu.: 15371796   #>                                        Max.   :0.7250   Max.   :742299307   #>                                        NA's   :130      NA's   :9           #>   unemployment      pop_growth         literacy     #>  Min.   : 0.180   Min.   :-3.1072   Min.   :32.00   #>  1st Qu.: 4.590   1st Qu.: 0.4992   1st Qu.:77.16   #>  Median : 6.730   Median : 1.3530   Median :91.75   #>  Mean   : 8.615   Mean   : 1.4752   Mean   :82.04   #>  3rd Qu.:11.158   3rd Qu.: 2.3755   3rd Qu.:94.99   #>  Max.   :28.030   Max.   : 6.5047   Max.   :99.98   #>  NA's   :63       NA's   :9         NA's   :143"},{"path":"https://jakubnowosad.com/spData/news/index.html","id":"spdata-234","dir":"Changelog","previous_headings":"","what":"spData 2.3.4","title":"spData 2.3.4","text":"Removes ESRI Shapefile versions datasets","code":""},{"path":"https://jakubnowosad.com/spData/news/index.html","id":"spdata-233","dir":"Changelog","previous_headings":"","what":"spData 2.3.3","title":"spData 2.3.3","text":"CRAN release: 2024-09-02 Specifies CRS nz nz_height objects ESPG:2193","code":""},{"path":"https://jakubnowosad.com/spData/news/index.html","id":"spdata-232","dir":"Changelog","previous_headings":"","what":"spData 2.3.2","title":"spData 2.3.2","text":"Adds shapes/NY8_utm18.gpkg file","code":""},{"path":"https://jakubnowosad.com/spData/news/index.html","id":"spdata-231","dir":"Changelog","previous_headings":"","what":"spData 2.3.1","title":"spData 2.3.1","text":"CRAN release: 2024-05-31 Adds NEWS.md file track changes package. added GeoPackage versions datasets package (plan remove ESRI Shapefile versions near future).","code":""}]
